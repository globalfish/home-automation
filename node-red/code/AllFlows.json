[
    {
        "id": "9e5c4afc.dcc398",
        "type": "tab",
        "label": "SensorMonitor"
    },
    {
        "id": "e4f639c8.94dc68",
        "type": "tab",
        "label": "Dashboard"
    },
    {
        "id": "b9ab96ac.e0e8a8",
        "type": "tab",
        "label": "AutomaticLighting"
    },
    {
        "id": "4c9633fe.a93e5c",
        "type": "tab",
        "label": "SetStates"
    },
    {
        "id": "5ed2a187.b6993",
        "type": "tab",
        "label": "AquariumTimers"
    },
    {
        "id": "554dac59.82b8d4",
        "type": "tab",
        "label": "Flow 1"
    },
    {
        "id": "267b956f.b927ea",
        "type": "tab",
        "label": "Flow 2"
    },
    {
        "id": "cc1d437c.d2949",
        "type": "mqtt-broker",
        "z": "",
        "broker": "192.168.86.36",
        "port": "1883",
        "clientid": "",
        "usetls": false,
        "verifyservercert": true,
        "compatmode": false,
        "keepalive": "10",
        "cleansession": true,
        "willTopic": "",
        "willQos": "0",
        "willRetain": null,
        "willPayload": "",
        "birthTopic": "",
        "birthQos": "0",
        "birthRetain": "false",
        "birthPayload": ""
    },
    {
        "id": "cb5bcf97.32336",
        "type": "ui_tab",
        "z": "",
        "name": "Historical",
        "icon": "dashboard",
        "order": 2
    },
    {
        "id": "635b3666.bac078",
        "type": "ui_tab",
        "z": "9e5c4afc.dcc398",
        "name": "Monitoring",
        "icon": "tab",
        "order": 3
    },
    {
        "id": "6539b990.daac48",
        "type": "ui_group",
        "z": "",
        "name": "Basement Stairs (1)",
        "tab": "cb5bcf97.32336",
        "order": 1,
        "disp": true,
        "width": "8"
    },
    {
        "id": "23c7297b.1d0dc6",
        "type": "ui_base",
        "name": "Node-RED Dashboard",
        "theme": "theme-dark"
    },
    {
        "id": "365a7e4.2189602",
        "type": "ui_group",
        "z": "",
        "name": "Default",
        "tab": "635b3666.bac078",
        "order": 1,
        "disp": true,
        "width": "6"
    },
    {
        "id": "ed3a50f1.fda7d",
        "type": "ui_group",
        "z": "",
        "name": "Front Hallway (2)",
        "tab": "cb5bcf97.32336",
        "order": 3,
        "disp": true,
        "width": "8"
    },
    {
        "id": "bbb12424.3c4a",
        "type": "ui_group",
        "z": "",
        "name": "Bedroom (3)",
        "tab": "cb5bcf97.32336",
        "order": 4,
        "disp": true,
        "width": "8"
    },
    {
        "id": "1b8384b0.dcd39b",
        "type": "ui_group",
        "z": "",
        "name": "Garage (4)",
        "tab": "cb5bcf97.32336",
        "order": 5,
        "disp": true,
        "width": "8"
    },
    {
        "id": "1dd8fe74.d9e64a",
        "type": "ui_group",
        "z": "",
        "name": "Family Room (5)",
        "tab": "cb5bcf97.32336",
        "order": 6,
        "disp": true,
        "width": "8"
    },
    {
        "id": "1455e795.d241a8",
        "type": "ui_group",
        "z": "",
        "name": "Fish Tank (5)",
        "tab": "cb5bcf97.32336",
        "order": 7,
        "disp": true,
        "width": "8"
    },
    {
        "id": "80591c0e.9d6dd",
        "type": "ui_group",
        "z": "",
        "name": "Basement Room (1)",
        "tab": "cb5bcf97.32336",
        "order": 2,
        "disp": true,
        "width": "8"
    },
    {
        "id": "4746011.7581c",
        "type": "ui_group",
        "z": "",
        "name": "Outside Temp2",
        "tab": "cb5bcf97.32336",
        "order": 8,
        "disp": false,
        "width": "6"
    },
    {
        "id": "753e8570.d94fac",
        "type": "ui_group",
        "z": "",
        "name": "Basement Room (1)",
        "tab": "f7a9aa66.bd11e8",
        "order": 2,
        "disp": true,
        "width": "5"
    },
    {
        "id": "f7a9aa66.bd11e8",
        "type": "ui_tab",
        "z": "",
        "name": "Current State",
        "icon": "dashboard",
        "order": 1
    },
    {
        "id": "e7c2eba5.3a8458",
        "type": "ui_group",
        "z": "",
        "name": "Basement Stairs (1)",
        "tab": "f7a9aa66.bd11e8",
        "order": 1,
        "disp": true,
        "width": "5"
    },
    {
        "id": "b0699912.a56398",
        "type": "ui_group",
        "z": "",
        "name": "Garage (4)",
        "tab": "f7a9aa66.bd11e8",
        "order": 5,
        "disp": true,
        "width": "5"
    },
    {
        "id": "a99bdfc.359cc2",
        "type": "ui_group",
        "z": "",
        "name": "Front Hallway (2)",
        "tab": "f7a9aa66.bd11e8",
        "order": 3,
        "disp": true,
        "width": "5"
    },
    {
        "id": "4d3cc33.01f053c",
        "type": "ui_group",
        "z": "",
        "name": "Bedroom (3)",
        "tab": "f7a9aa66.bd11e8",
        "order": 4,
        "disp": true,
        "width": "5"
    },
    {
        "id": "b3fd31f5.13e4b",
        "type": "ui_group",
        "z": "",
        "name": "Family Room (5)",
        "tab": "f7a9aa66.bd11e8",
        "order": 6,
        "disp": true,
        "width": "5"
    },
    {
        "id": "38b95dcf.9ddf82",
        "type": "ui_group",
        "z": "",
        "name": "Fish Tank (5)",
        "tab": "f7a9aa66.bd11e8",
        "order": 7,
        "disp": true,
        "width": "5"
    },
    {
        "id": "f7452d6c.92a3f",
        "type": "ui_group",
        "z": "",
        "name": "External (API)",
        "tab": "f7a9aa66.bd11e8",
        "order": 8,
        "disp": true,
        "width": "5"
    },
    {
        "id": "9e73c98f.b41688",
        "type": "ui_group",
        "z": "",
        "name": "Door State",
        "tab": "f7a9aa66.bd11e8",
        "disp": true,
        "width": "5"
    },
    {
        "id": "5c0e3c9f.cbbc54",
        "type": "mqtt-broker",
        "z": "",
        "broker": "iot.eclipse.org",
        "port": "1883",
        "clientid": "",
        "usetls": false,
        "compatmode": true,
        "keepalive": "60",
        "cleansession": true,
        "willTopic": "",
        "willQos": "0",
        "willRetain": "false",
        "willPayload": "",
        "birthTopic": "",
        "birthQos": "0",
        "birthRetain": "false",
        "birthPayload": ""
    },
    {
        "id": "419e7ee2.cc7ab",
        "type": "websocket-listener",
        "z": "",
        "path": "/sensorData",
        "wholemsg": "false"
    },
    {
        "id": "ea5e536b.ad44b",
        "type": "mqtt in",
        "z": "9e5c4afc.dcc398",
        "name": "SensorManagement",
        "topic": "SensorManagement",
        "broker": "cc1d437c.d2949",
        "x": 177,
        "y": 96,
        "wires": [
            [
                "99e96e97.3986f",
                "926f7cdf.90acb"
            ]
        ]
    },
    {
        "id": "87f0a530.2a2648",
        "type": "comment",
        "z": "9e5c4afc.dcc398",
        "name": "Logging management console",
        "info": "",
        "x": 226,
        "y": 52,
        "wires": []
    },
    {
        "id": "98714c.7f125eb8",
        "type": "mqtt in",
        "z": "e4f639c8.94dc68",
        "name": "SensorData",
        "topic": "SensorData",
        "broker": "cc1d437c.d2949",
        "x": 115,
        "y": 284,
        "wires": [
            [
                "70890c00.16a604"
            ]
        ]
    },
    {
        "id": "70890c00.16a604",
        "type": "function",
        "z": "e4f639c8.94dc68",
        "name": "ChkZeroLenMsg",
        "func": "if (msg.payload.length > 0 )\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 312,
        "y": 264,
        "wires": [
            [
                "da1a818.e1ef68"
            ]
        ]
    },
    {
        "id": "da1a818.e1ef68",
        "type": "function",
        "z": "e4f639c8.94dc68",
        "name": "ChkCleanJSONString",
        "func": "// check for fully formed JSON string\nvar temp = msg.payload;\nvar strLen = msg.payload.length;\nif( (temp.indexOf(\"{\") === 0) && (temp.indexOf(\"}\") === (strLen-1)))\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 537,
        "y": 271,
        "wires": [
            [
                "99977d9a.9ff8a"
            ]
        ]
    },
    {
        "id": "5577e7be.f26608",
        "type": "ui_chart",
        "z": "e4f639c8.94dc68",
        "name": "ChartBasementStairsTemp",
        "group": "6539b990.daac48",
        "order": 1,
        "width": "",
        "height": "",
        "label": "Temperature",
        "chartType": "line",
        "xformat": "HH:mm",
        "interpolate": "step-after",
        "nodata": "No Data",
        "ymin": "60",
        "ymax": "80",
        "removeOlder": 1,
        "removeOlderPoints": "",
        "removeOlderUnit": "86400",
        "cutout": "",
        "x": 956,
        "y": 385,
        "wires": [
            [],
            []
        ]
    },
    {
        "id": "99977d9a.9ff8a",
        "type": "json",
        "z": "e4f639c8.94dc68",
        "name": "ConvertToJSON",
        "x": 222,
        "y": 400,
        "wires": [
            [
                "f47cebe6.57a698"
            ]
        ]
    },
    {
        "id": "8a24bfdc.ea2dc",
        "type": "switch",
        "z": "e4f639c8.94dc68",
        "name": "ForEachSensor",
        "property": "payload.SensorId",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "1",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "2",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "3",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "4",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "5",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "outputs": 5,
        "x": 273,
        "y": 672,
        "wires": [
            [
                "93231927.4fa868",
                "52ddc4a9.24d1fc",
                "763f6422.aa4bec",
                "51f72c2a.b37a14"
            ],
            [
                "8c229bc3.f72a68",
                "c7a6da26.0e94f8"
            ],
            [
                "6ae31f4c.ec602",
                "f1bb313f.c4dd8"
            ],
            [
                "f2972017.17037",
                "2443137e.389f0c"
            ],
            [
                "fc336f79.ac68a",
                "759109b.f80cff8",
                "d67a687.06eda98"
            ]
        ]
    },
    {
        "id": "1d03f676.eb4e3a",
        "type": "ui_chart",
        "z": "e4f639c8.94dc68",
        "name": "ChartFrontHallwayTemp",
        "group": "ed3a50f1.fda7d",
        "order": 1,
        "width": "",
        "height": "",
        "label": "Temperature",
        "chartType": "line",
        "xformat": "HH:mm",
        "interpolate": "step-after",
        "nodata": "No Data",
        "ymin": "60",
        "ymax": "80",
        "removeOlder": 1,
        "removeOlderPoints": "",
        "removeOlderUnit": "86400",
        "cutout": "",
        "x": 1080.0000305175781,
        "y": 657,
        "wires": [
            [],
            []
        ]
    },
    {
        "id": "1dbffed3.dde1e1",
        "type": "ui_chart",
        "z": "e4f639c8.94dc68",
        "name": "ChartTopHallwayTemp",
        "group": "bbb12424.3c4a",
        "order": 1,
        "width": "",
        "height": "",
        "label": "Temperature",
        "chartType": "line",
        "xformat": "HH:mm",
        "interpolate": "step-after",
        "nodata": "No Data",
        "ymin": "60",
        "ymax": "80",
        "removeOlder": 1,
        "removeOlderPoints": "",
        "removeOlderUnit": "86400",
        "cutout": "",
        "x": 897,
        "y": 750,
        "wires": [
            [],
            []
        ]
    },
    {
        "id": "511dc51b.c331bc",
        "type": "ui_chart",
        "z": "e4f639c8.94dc68",
        "name": "ChartGarageTemp",
        "group": "1b8384b0.dcd39b",
        "order": 1,
        "width": "",
        "height": "",
        "label": "Temperature",
        "chartType": "line",
        "xformat": "HH:mm",
        "interpolate": "step-after",
        "nodata": "No Data",
        "ymin": "60",
        "ymax": "80",
        "removeOlder": 1,
        "removeOlderPoints": "",
        "removeOlderUnit": "86400",
        "cutout": "",
        "x": 1100,
        "y": 851,
        "wires": [
            [],
            []
        ]
    },
    {
        "id": "7ac0c958.263f78",
        "type": "ui_gauge",
        "z": "e4f639c8.94dc68",
        "name": "GaugeGarageTemp",
        "group": "b0699912.a56398",
        "order": 1,
        "width": "5",
        "height": "3",
        "gtype": "gage",
        "title": "",
        "label": "",
        "format": "{{value}}",
        "min": "60",
        "max": "80",
        "colors": [
            "#0000ff",
            "#e6e600",
            "#ca3838"
        ],
        "x": 1103,
        "y": 893,
        "wires": []
    },
    {
        "id": "f00f0618.2dccd8",
        "type": "ui_gauge",
        "z": "e4f639c8.94dc68",
        "name": "GaugeTopHallwayTemp",
        "group": "4d3cc33.01f053c",
        "order": 1,
        "width": "5",
        "height": "3",
        "gtype": "gage",
        "title": "",
        "label": "",
        "format": "{{value}}",
        "min": "60",
        "max": "80",
        "colors": [
            "#0000ff",
            "#e6e600",
            "#ca3838"
        ],
        "x": 903,
        "y": 785,
        "wires": []
    },
    {
        "id": "adf56a74.aa03b8",
        "type": "ui_gauge",
        "z": "e4f639c8.94dc68",
        "name": "GaugeFrontHallwayTemp",
        "group": "a99bdfc.359cc2",
        "order": 1,
        "width": "5",
        "height": "3",
        "gtype": "gage",
        "title": "",
        "label": "",
        "format": "{{value}}",
        "min": "60",
        "max": "80",
        "colors": [
            "#0000ff",
            "#e6e600",
            "#ca3838"
        ],
        "x": 1090,
        "y": 690,
        "wires": []
    },
    {
        "id": "1bbe4f6a.c192c1",
        "type": "ui_gauge",
        "z": "e4f639c8.94dc68",
        "name": "GaugeBasementStairsTemp",
        "group": "e7c2eba5.3a8458",
        "order": 1,
        "width": "5",
        "height": "3",
        "gtype": "gage",
        "title": "",
        "label": "",
        "format": "{{value}}",
        "min": "60",
        "max": "80",
        "colors": [
            "#0000ff",
            "#e6e600",
            "#ca3838"
        ],
        "x": 953,
        "y": 422,
        "wires": []
    },
    {
        "id": "a54b5541.0fe498",
        "type": "ui_chart",
        "z": "e4f639c8.94dc68",
        "name": "ChartBasementStairsLight1",
        "group": "6539b990.daac48",
        "order": 2,
        "width": "",
        "height": "",
        "label": "Light Level",
        "chartType": "line",
        "xformat": "HH",
        "interpolate": "basis",
        "nodata": "No Data",
        "ymin": "",
        "ymax": "",
        "removeOlder": 1,
        "removeOlderPoints": "",
        "removeOlderUnit": "86400",
        "cutout": "",
        "x": 958.0001525878906,
        "y": 454,
        "wires": [
            [],
            []
        ]
    },
    {
        "id": "21029c9d.918314",
        "type": "ui_chart",
        "z": "e4f639c8.94dc68",
        "name": "ChartFrontHallwayLight",
        "group": "ed3a50f1.fda7d",
        "order": 2,
        "width": "",
        "height": "",
        "label": "Light Level",
        "chartType": "line",
        "xformat": "HH",
        "interpolate": "basis",
        "nodata": "No Data",
        "ymin": "",
        "ymax": "",
        "removeOlder": 1,
        "removeOlderPoints": "",
        "removeOlderUnit": "86400",
        "cutout": "",
        "x": 1098,
        "y": 727,
        "wires": [
            [],
            []
        ]
    },
    {
        "id": "39980784.90a7a8",
        "type": "ui_chart",
        "z": "e4f639c8.94dc68",
        "name": "ChartTopHallway",
        "group": "bbb12424.3c4a",
        "order": 2,
        "width": "",
        "height": "",
        "label": "Light Level",
        "chartType": "line",
        "xformat": "HH",
        "interpolate": "basis",
        "nodata": "No Data",
        "ymin": "",
        "ymax": "",
        "removeOlder": 1,
        "removeOlderPoints": "",
        "removeOlderUnit": "86400",
        "cutout": "",
        "x": 888,
        "y": 825,
        "wires": [
            [],
            []
        ]
    },
    {
        "id": "e1aa1596.778ee8",
        "type": "ui_chart",
        "z": "e4f639c8.94dc68",
        "name": "ChartGarageLight",
        "group": "1b8384b0.dcd39b",
        "order": 2,
        "width": "",
        "height": "",
        "label": "Light Level",
        "chartType": "line",
        "xformat": "HH",
        "interpolate": "basis",
        "nodata": "No Data",
        "ymin": "",
        "ymax": "",
        "removeOlder": 1,
        "removeOlderPoints": "",
        "removeOlderUnit": "86400",
        "cutout": "",
        "x": 1100,
        "y": 930,
        "wires": [
            [],
            []
        ]
    },
    {
        "id": "99e96e97.3986f",
        "type": "function",
        "z": "9e5c4afc.dcc398",
        "name": "Extract Sensor ID",
        "func": "var tempStr = msg.payload;\nmsg.payload = {};\nvar loc = tempStr.indexOf(\"INFO:\");\nif( loc === 0 ) {\n    var sensorID = tempStr.substring( loc+15,loc+17);\n    var ipAddr = tempStr.substring( loc+29,tempStr.length)\n    msg.payload.sensorID = parseInt(sensorID);\n    msg.payload.ipAddr = ipAddr;\n    return msg;\n}",
        "outputs": 1,
        "noerr": 0,
        "x": 401,
        "y": 115,
        "wires": [
            [
                "3c7b190a.2d77d6"
            ]
        ]
    },
    {
        "id": "3c7b190a.2d77d6",
        "type": "switch",
        "z": "9e5c4afc.dcc398",
        "name": "ForEachSensor",
        "property": "payload.sensorID",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "1 ",
                "vt": "num"
            },
            {
                "t": "eq",
                "v": "2 ",
                "vt": "num"
            },
            {
                "t": "eq",
                "v": "3 ",
                "vt": "num"
            },
            {
                "t": "eq",
                "v": "4 ",
                "vt": "num"
            },
            {
                "t": "eq",
                "v": "5",
                "vt": "str"
            }
        ],
        "checkall": "false",
        "outputs": 5,
        "x": 253,
        "y": 218,
        "wires": [
            [
                "f7b4664f.3d7758"
            ],
            [
                "8027b64a.fff9e8"
            ],
            [
                "b5280138.660be"
            ],
            [
                "83b7929a.83dfb"
            ],
            [
                "4133fa7.3947704"
            ]
        ]
    },
    {
        "id": "f7b4664f.3d7758",
        "type": "function",
        "z": "9e5c4afc.dcc398",
        "name": "CountUPMessages",
        "func": "var count = context.get('count')||0;\nvar lastTime = context.get('lastTime')||0;\n\nvar currMillis = new Date().valueOf();\nif( (currMillis - lastTime) > 15000) { // 15 secs aggregation\n\n    if( count === 0) {\n        msg.payload = \"Sensor 1 is DOWN.\";\n    }\n    else {\n        msg.payload = \"Sensor 1 is UP.\";\n    }\n           \n    context.set('count',0);\n    context.set('lastTime', currMillis);\n    return msg;\n}\ncount++;\ncontext.set('count',count);\n\nreturn null;",
        "outputs": 1,
        "noerr": 0,
        "x": 547,
        "y": 195,
        "wires": [
            [
                "46d4032b.a0f01c"
            ]
        ]
    },
    {
        "id": "8027b64a.fff9e8",
        "type": "function",
        "z": "9e5c4afc.dcc398",
        "name": "CountUPMessages",
        "func": "var count = context.get('count')||0;\nvar lastTime = context.get('lastTime')||0;\n\nvar currMillis = new Date().valueOf();\nif( (currMillis - lastTime) > 15000) { // 15 secs aggregation\n\n    if( count === 0) {\n        msg.payload = \"Sensor 2 is DOWN.\";\n    }\n    else {\n        msg.payload = \"Sensor 2 is UP.\";\n    }\n           \n    context.set('count',0);\n    context.set('lastTime', currMillis);\n    return msg;\n}\ncount++;\ncontext.set('count',count);\n\nreturn null;",
        "outputs": 1,
        "noerr": 0,
        "x": 560,
        "y": 237,
        "wires": [
            [
                "47cc0b19.d7f804"
            ]
        ]
    },
    {
        "id": "b5280138.660be",
        "type": "function",
        "z": "9e5c4afc.dcc398",
        "name": "CountUPMessages",
        "func": "var count = context.get('count')||0;\nvar lastTime = context.get('lastTime')||0;\n\nvar currMillis = new Date().valueOf();\nif( (currMillis - lastTime) > 15000) { // 15 secs aggregation\n\n    if( count === 0) {\n        msg.payload = \"Sensor 3 is DOWN.\";\n    }\n    else {\n        msg.payload = \"Sensor 3 is UP.\";\n    }\n           \n    context.set('count',0);\n    context.set('lastTime', currMillis);\n    return msg;\n}\ncount++;\ncontext.set('count',count);\n\nreturn null;",
        "outputs": 1,
        "noerr": 0,
        "x": 563,
        "y": 276,
        "wires": [
            [
                "4f9fda60.7e3014"
            ]
        ]
    },
    {
        "id": "83b7929a.83dfb",
        "type": "function",
        "z": "9e5c4afc.dcc398",
        "name": "CountUPMessages",
        "func": "var count = context.get('count')||0;\nvar lastTime = context.get('lastTime')||0;\n\nvar currMillis = new Date().valueOf();\nif( (currMillis - lastTime) > 15000) { // 15 secs aggregation\n\n    if( count === 0) {\n        msg.payload = \"Sensor 4 is DOWN.\";\n    }\n    else {\n        msg.payload = \"Sensor 4 is UP.\";\n    }\n           \n    context.set('count',0);\n    context.set('lastTime', currMillis);\n    return msg;\n}\ncount++;\ncontext.set('count',count);\n\nreturn null;",
        "outputs": 1,
        "noerr": 0,
        "x": 540,
        "y": 320,
        "wires": [
            [
                "4ed33e6b.4bb99"
            ]
        ]
    },
    {
        "id": "46d4032b.a0f01c",
        "type": "ui_text",
        "z": "9e5c4afc.dcc398",
        "group": "365a7e4.2189602",
        "order": 1,
        "width": "",
        "height": "",
        "name": "Status:",
        "label": "",
        "format": "{{msg.payload}}",
        "layout": "",
        "x": 843,
        "y": 181,
        "wires": []
    },
    {
        "id": "47cc0b19.d7f804",
        "type": "ui_text",
        "z": "9e5c4afc.dcc398",
        "group": "365a7e4.2189602",
        "order": 1,
        "width": "",
        "height": "",
        "name": "Status:",
        "label": "",
        "format": "{{msg.payload}}",
        "layout": "",
        "x": 853,
        "y": 222,
        "wires": []
    },
    {
        "id": "4f9fda60.7e3014",
        "type": "ui_text",
        "z": "9e5c4afc.dcc398",
        "group": "365a7e4.2189602",
        "order": 1,
        "width": "",
        "height": "",
        "name": "Status:",
        "label": "",
        "format": "{{msg.payload}}",
        "layout": "",
        "x": 851,
        "y": 272,
        "wires": []
    },
    {
        "id": "4ed33e6b.4bb99",
        "type": "ui_text",
        "z": "9e5c4afc.dcc398",
        "group": "365a7e4.2189602",
        "order": 1,
        "width": "",
        "height": "",
        "name": "Status:",
        "label": "",
        "format": "{{msg.payload}}",
        "layout": "",
        "x": 853,
        "y": 317,
        "wires": []
    },
    {
        "id": "61805741.d6b308",
        "type": "file",
        "z": "e4f639c8.94dc68",
        "name": "",
        "filename": "/tmp/newSensorData3.csv",
        "appendNewline": true,
        "createDir": false,
        "overwriteFile": "false",
        "x": 1016,
        "y": 333,
        "wires": []
    },
    {
        "id": "87f65b13.b254a8",
        "type": "function",
        "z": "e4f639c8.94dc68",
        "name": "convertCSV",
        "func": "var id = msg.payload.SensorId;\nvar attribute = msg.payload.Measurement;\nvar value = msg.payload.Value;\nvar timestamp = new Date().valueOf();\nvar outString = id + \",\" + attribute + \",\" + value + \",\" + timestamp;\nmsg.payload = outString;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 717,
        "y": 338,
        "wires": [
            [
                "61805741.d6b308"
            ]
        ]
    },
    {
        "id": "926f7cdf.90acb",
        "type": "debug",
        "z": "9e5c4afc.dcc398",
        "name": "",
        "active": false,
        "console": "false",
        "complete": "false",
        "x": 666,
        "y": 87,
        "wires": []
    },
    {
        "id": "f47cebe6.57a698",
        "type": "function",
        "z": "e4f639c8.94dc68",
        "name": "RoundOff",
        "func": "var attribute = msg.payload.Measurement;\nvar value = msg.payload.Value;\nif( attribute === \"light\" || \n    attribute === \"light2\") { // discretize to 20 values\n    msg.payload.Value = Math.floor(value/50);\n}\n\nif( attribute === \"temperature\" || \n    attribute === \"temperature1\" ||\n    attribute === \"temperature2\") { // round off\n    msg.payload.Value = Math.round(value);\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 399,
        "y": 397,
        "wires": [
            [
                "8a24bfdc.ea2dc",
                "87f65b13.b254a8",
                "d71de6d7.f03bd8"
            ]
        ]
    },
    {
        "id": "f2972017.17037",
        "type": "function",
        "z": "e4f639c8.94dc68",
        "name": "LightSensor4",
        "func": "var jsonObj = msg.payload;\nif (jsonObj.Measurement === \"light\") {\n    var temp = jsonObj.Value;\n    msg.payload = temp;\n    return msg;\n}",
        "outputs": 1,
        "noerr": 0,
        "x": 646,
        "y": 935,
        "wires": [
            [
                "e1aa1596.778ee8",
                "7adb1f06.70b3c"
            ]
        ]
    },
    {
        "id": "6ae31f4c.ec602",
        "type": "function",
        "z": "e4f639c8.94dc68",
        "name": "LightSensor3",
        "func": "var jsonObj = msg.payload;\nif (jsonObj.Measurement === \"light\") {\n    var temp = jsonObj.Value;\n    msg.payload = temp;\n    return msg;\n}",
        "outputs": 1,
        "noerr": 0,
        "x": 622,
        "y": 815,
        "wires": [
            [
                "39980784.90a7a8",
                "d323e087.5bfa9"
            ]
        ]
    },
    {
        "id": "8c229bc3.f72a68",
        "type": "function",
        "z": "e4f639c8.94dc68",
        "name": "LightSensor2",
        "func": "var jsonObj = msg.payload;\nif (jsonObj.Measurement === \"light\") {\n    var temp = jsonObj.Value;\n    msg.payload = temp;\n    return msg;\n}",
        "outputs": 1,
        "noerr": 0,
        "x": 615,
        "y": 661,
        "wires": [
            [
                "21029c9d.918314",
                "9c2a3c07.56c3a"
            ]
        ]
    },
    {
        "id": "93231927.4fa868",
        "type": "function",
        "z": "e4f639c8.94dc68",
        "name": "LightSensor1",
        "func": "var jsonObj = msg.payload;\nif (jsonObj.Measurement === \"light\") {\n    var temp = jsonObj.Value;\n    msg.payload = temp;\n    return msg;\n}\n",
        "outputs": "1",
        "noerr": 0,
        "x": 606,
        "y": 501,
        "wires": [
            [
                "a54b5541.0fe498",
                "ea85981.4000e68"
            ]
        ]
    },
    {
        "id": "2443137e.389f0c",
        "type": "function",
        "z": "e4f639c8.94dc68",
        "name": "TempSensor4",
        "func": "var jsonObj = msg.payload;\nif (jsonObj.Measurement === \"temperature\") {\n    var temp = jsonObj.Value;\n    msg.payload = temp;\n    return msg;\n}",
        "outputs": 1,
        "noerr": 0,
        "x": 657,
        "y": 893,
        "wires": [
            [
                "511dc51b.c331bc",
                "7ac0c958.263f78"
            ]
        ]
    },
    {
        "id": "f1bb313f.c4dd8",
        "type": "function",
        "z": "e4f639c8.94dc68",
        "name": "TempSensor3",
        "func": "var jsonObj = msg.payload;\nif (jsonObj.Measurement === \"temperature\") {\n    var temp = jsonObj.Value;\n    msg.payload = temp;\n    return msg;\n}",
        "outputs": 1,
        "noerr": 0,
        "x": 628,
        "y": 773,
        "wires": [
            [
                "1dbffed3.dde1e1",
                "f00f0618.2dccd8"
            ]
        ]
    },
    {
        "id": "c7a6da26.0e94f8",
        "type": "function",
        "z": "e4f639c8.94dc68",
        "name": "TempSensor2",
        "func": "var jsonObj = msg.payload;\nif (jsonObj.Measurement === \"temperature\") {\n    var temp = jsonObj.Value;\n    msg.payload = temp;\n    return msg;\n}",
        "outputs": 1,
        "noerr": 0,
        "x": 625,
        "y": 621,
        "wires": [
            [
                "1d03f676.eb4e3a",
                "adf56a74.aa03b8"
            ]
        ]
    },
    {
        "id": "52ddc4a9.24d1fc",
        "type": "function",
        "z": "e4f639c8.94dc68",
        "name": "TempSensor1",
        "func": "var jsonObj = msg.payload;\nif (jsonObj.Measurement === \"temperature\") {\n    var temp = jsonObj.Value;\n    msg.payload = temp;\n    return msg;\n}",
        "outputs": 1,
        "noerr": 0,
        "x": 618,
        "y": 463,
        "wires": [
            [
                "5577e7be.f26608",
                "1bbe4f6a.c192c1"
            ]
        ]
    },
    {
        "id": "90bd8e4b.b3999",
        "type": "ui_chart",
        "z": "e4f639c8.94dc68",
        "name": "ChartBasementRoomLight",
        "group": "80591c0e.9d6dd",
        "order": 2,
        "width": "",
        "height": "",
        "label": "Light Level",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH",
        "interpolate": "linear",
        "nodata": "No Data",
        "ymin": "",
        "ymax": "",
        "removeOlder": 1,
        "removeOlderPoints": "",
        "removeOlderUnit": "86400",
        "cutout": "",
        "x": 961.0000305175781,
        "y": 592,
        "wires": [
            [],
            []
        ]
    },
    {
        "id": "db12a48e.84bd08",
        "type": "mqtt in",
        "z": "b9ab96ac.e0e8a8",
        "name": "SensorData",
        "topic": "SensorData",
        "broker": "cc1d437c.d2949",
        "x": 113,
        "y": 64,
        "wires": [
            [
                "4b54a264.8f555c"
            ]
        ]
    },
    {
        "id": "4b54a264.8f555c",
        "type": "function",
        "z": "b9ab96ac.e0e8a8",
        "name": "ChkZeroLenMsg",
        "func": "if (msg.payload.length > 0 )\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 329,
        "y": 65,
        "wires": [
            [
                "c59c47e9.10cd28"
            ]
        ]
    },
    {
        "id": "c59c47e9.10cd28",
        "type": "function",
        "z": "b9ab96ac.e0e8a8",
        "name": "ChkCleanJSONString",
        "func": "// check for fully formed JSON string\nvar temp = msg.payload;\nvar strLen = msg.payload.length;\nif( (temp.indexOf(\"{\") === 0) && (temp.indexOf(\"}\") === (strLen-1)))\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 564,
        "y": 65,
        "wires": [
            [
                "c960f3d6.4f96a"
            ]
        ]
    },
    {
        "id": "c960f3d6.4f96a",
        "type": "json",
        "z": "b9ab96ac.e0e8a8",
        "name": "ConvertToJSON",
        "x": 783,
        "y": 65,
        "wires": [
            [
                "1219ac0f.7ec414"
            ]
        ]
    },
    {
        "id": "1219ac0f.7ec414",
        "type": "function",
        "z": "b9ab96ac.e0e8a8",
        "name": "RoundOff",
        "func": "var attribute = msg.payload.Measurement;\nvar value = msg.payload.Value;\nif( attribute === \"light\" || \n    attribute === \"light2\") { // discretize to 20 values\n    msg.payload.Value = Math.floor(value/50);\n}\n\nif( attribute === \"temperature\") { // round off\n    msg.payload.Value = Math.round(value);\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 153,
        "y": 188,
        "wires": [
            [
                "40187d93.906c84"
            ]
        ]
    },
    {
        "id": "40187d93.906c84",
        "type": "switch",
        "z": "b9ab96ac.e0e8a8",
        "name": "ForEachSensor",
        "property": "payload.SensorId",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "1",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "2",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "3",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "4",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "5",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "outputs": 5,
        "x": 418,
        "y": 185,
        "wires": [
            [
                "76caf891.182248"
            ],
            [
                "c647b1e1.ac46c"
            ],
            [
                "4ac1fa3c.140db4"
            ],
            [
                "199063ad.175bdc"
            ],
            [
                "4700efbc.00b39"
            ]
        ]
    },
    {
        "id": "76caf891.182248",
        "type": "function",
        "z": "b9ab96ac.e0e8a8",
        "name": "FilterEventByMotion",
        "func": "var jsonObj = msg.payload;\nif (jsonObj.Measurement === \"motion\") {\n\n    return msg;\n}\nif (jsonObj.Measurement === \"motion2\") {\n\n    return msg;\n}",
        "outputs": 1,
        "noerr": 0,
        "x": 210,
        "y": 374,
        "wires": [
            [
                "3a5b0b04.078774"
            ]
        ]
    },
    {
        "id": "1d34b61f.92ecfa",
        "type": "function",
        "z": "b9ab96ac.e0e8a8",
        "name": "CreateAction",
        "func": "// \nvar sensorId; // contains the sensorId to send message to\nvar pinNumber; // which pin to change <int>\nvar pinValue; // value to set: HIGH, LOW, <int>\n\n//\n// Create action message to be sent to sensor\n//\nvar actionStr = \"ACTION,\";\nactionStr += msg.payload.SensorId;\nactionStr += \",\";\nactionStr += msg.payload.actionId;\nactionStr += \",SETPIN,\";\nactionStr += msg.payload.pinNumber;\nactionStr += \",\";\nactionStr += msg.payload.pinValue;\n\nmsg.payload = actionStr;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 1137.5,
        "y": 393.4499816894531,
        "wires": [
            [
                "9e46fbe9.dcd8d8",
                "921a3ebc.f29c1"
            ]
        ]
    },
    {
        "id": "1be79b06.b6d685",
        "type": "function",
        "z": "b9ab96ac.e0e8a8",
        "name": "SetActionValuesLightON",
        "func": "//\n// Set all the values needed for an action string\n\n// pin number is hardcoded and based on value set in sketch\nmsg.payload.pinNumber = 13;\n// just a unique id for action\nmsg.payload.actionId = Math.round(Math.random()*10000);\nif( msg.payload.Value === \"1\" ) {\n    msg.payload.pinValue = \"HIGH\";\n    return msg;\n}\nreturn null;\n",
        "outputs": 1,
        "noerr": 0,
        "x": 667.5,
        "y": 350.4499816894531,
        "wires": [
            [
                "7934e013.4435e"
            ]
        ]
    },
    {
        "id": "9e46fbe9.dcd8d8",
        "type": "debug",
        "z": "b9ab96ac.e0e8a8",
        "name": "",
        "active": false,
        "console": "false",
        "complete": "false",
        "x": 1181.5,
        "y": 243.29998779296875,
        "wires": []
    },
    {
        "id": "921a3ebc.f29c1",
        "type": "mqtt out",
        "z": "b9ab96ac.e0e8a8",
        "name": "SendToSensor",
        "topic": "inTopic",
        "qos": "",
        "retain": "",
        "broker": "cc1d437c.d2949",
        "x": 1234.5,
        "y": 558.2999877929688,
        "wires": []
    },
    {
        "id": "3a5b0b04.078774",
        "type": "switch",
        "z": "b9ab96ac.e0e8a8",
        "name": "DetectMotion",
        "property": "payload.Value",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "1",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "0",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "outputs": 2,
        "x": 410.5,
        "y": 372.4499816894531,
        "wires": [
            [
                "81f35bc6.05caa8"
            ],
            [
                "652d6700.9e11b8"
            ]
        ]
    },
    {
        "id": "652d6700.9e11b8",
        "type": "function",
        "z": "b9ab96ac.e0e8a8",
        "name": "SetActionValuesLightOFF",
        "func": "//\n// Set all the values needed for an action string\n\n// pin number is hardcoded and based on value set in sketch\nmsg.payload.pinNumber = 13;\n// just a unique id for action\nmsg.payload.actionId = Math.round(Math.random()*10000);\nif( msg.payload.Value === \"0\" ) {\n    msg.payload.pinValue = \"LOW\";\n    return msg;\n}\nreturn null;\n",
        "outputs": 1,
        "noerr": 0,
        "x": 668,
        "y": 409,
        "wires": [
            [
                "41dc7df9.40e244"
            ]
        ]
    },
    {
        "id": "41dc7df9.40e244",
        "type": "delay",
        "z": "b9ab96ac.e0e8a8",
        "name": "",
        "pauseType": "rate",
        "timeout": "5",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "5",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": true,
        "x": 903.5,
        "y": 408.4499816894531,
        "wires": [
            [
                "1d34b61f.92ecfa"
            ]
        ]
    },
    {
        "id": "c647b1e1.ac46c",
        "type": "function",
        "z": "b9ab96ac.e0e8a8",
        "name": "FilterEventByMotion",
        "func": "var jsonObj = msg.payload;\nif (jsonObj.Measurement === \"motion\") {\n\n    return msg;\n}\nif (jsonObj.Measurement === \"motion2\") {\n\n    return msg;\n}",
        "outputs": 1,
        "noerr": 0,
        "x": 202,
        "y": 518,
        "wires": [
            [
                "b8a58ed2.9f939"
            ]
        ]
    },
    {
        "id": "8dd8f218.c218d",
        "type": "function",
        "z": "b9ab96ac.e0e8a8",
        "name": "SetActionValuesLightON",
        "func": "//\n// Set all the values needed for an action string\n\n// pin number is hardcoded and based on value set in sketch\nmsg.payload.pinNumber = 13;\n// just a unique id for action\nmsg.payload.actionId = Math.round(Math.random()*10000);\nif( msg.payload.Value === \"1\" ) {\n    msg.payload.pinValue = \"HIGH\";\n    return msg;\n}\nreturn null;\n",
        "outputs": 1,
        "noerr": 0,
        "x": 667.5,
        "y": 525.449951171875,
        "wires": [
            [
                "e52b56cc.c9a1f8"
            ]
        ]
    },
    {
        "id": "b8a58ed2.9f939",
        "type": "switch",
        "z": "b9ab96ac.e0e8a8",
        "name": "DetectMotion",
        "property": "payload.Value",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "1",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "0",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "outputs": 2,
        "x": 418.64288330078125,
        "y": 507.44994354248047,
        "wires": [
            [
                "47cf6bf4.8bac24"
            ],
            [
                "f09f56ef.c67878"
            ]
        ]
    },
    {
        "id": "f09f56ef.c67878",
        "type": "function",
        "z": "b9ab96ac.e0e8a8",
        "name": "SetActionValuesLightOFF",
        "func": "//\n// Set all the values needed for an action string\n\n// pin number is hardcoded and based on value set in sketch\nmsg.payload.pinNumber = 13;\n// just a unique id for action\nmsg.payload.actionId = Math.round(Math.random()*10000);\nif( msg.payload.Value === \"0\" ) {\n    msg.payload.pinValue = \"LOW\";\n    return msg;\n}\nreturn null;\n",
        "outputs": 1,
        "noerr": 0,
        "x": 667,
        "y": 585,
        "wires": [
            [
                "b157d3f4.e0015"
            ]
        ]
    },
    {
        "id": "b157d3f4.e0015",
        "type": "delay",
        "z": "b9ab96ac.e0e8a8",
        "name": "",
        "pauseType": "rate",
        "timeout": "5",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "5",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": true,
        "x": 903.5,
        "y": 582.449951171875,
        "wires": [
            [
                "1d34b61f.92ecfa"
            ]
        ]
    },
    {
        "id": "4ac1fa3c.140db4",
        "type": "function",
        "z": "b9ab96ac.e0e8a8",
        "name": "FilterEventByMotion",
        "func": "var jsonObj = msg.payload;\nif (jsonObj.Measurement === \"motion\") {\n\n    return msg;\n}\nif (jsonObj.Measurement === \"motion2\") {\n\n    return msg;\n}",
        "outputs": 1,
        "noerr": 0,
        "x": 192,
        "y": 694,
        "wires": [
            [
                "2d2508ef.d6cd28"
            ]
        ]
    },
    {
        "id": "8f0b7c98.4113b",
        "type": "function",
        "z": "b9ab96ac.e0e8a8",
        "name": "SetActionValuesLightON",
        "func": "//\n// Set all the values needed for an action string\n\n// pin number is hardcoded and based on value set in sketch\nmsg.payload.pinNumber = 13;\n// just a unique id for action\nmsg.payload.actionId = Math.round(Math.random()*10000);\nif( msg.payload.Value === \"1\" ) {\n    msg.payload.pinValue = \"HIGH\";\n    return msg;\n}\nreturn null;\n",
        "outputs": 1,
        "noerr": 0,
        "x": 668.5,
        "y": 706.449951171875,
        "wires": [
            [
                "96bce922.863ad8"
            ]
        ]
    },
    {
        "id": "2d2508ef.d6cd28",
        "type": "switch",
        "z": "b9ab96ac.e0e8a8",
        "name": "DetectMotion",
        "property": "payload.Value",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "1",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "0",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "outputs": 2,
        "x": 405.5,
        "y": 697.449951171875,
        "wires": [
            [
                "aecd6fcb.034d9"
            ],
            [
                "7548cb5e.aaf994"
            ]
        ]
    },
    {
        "id": "7548cb5e.aaf994",
        "type": "function",
        "z": "b9ab96ac.e0e8a8",
        "name": "SetActionValuesLightOFF",
        "func": "//\n// Set all the values needed for an action string\n\n// pin number is hardcoded and based on value set in sketch\nmsg.payload.pinNumber = 13;\n// just a unique id for action\nmsg.payload.actionId = Math.round(Math.random()*10000);\nif( msg.payload.Value === \"0\" ) {\n    msg.payload.pinValue = \"LOW\";\n    return msg;\n}\nreturn null;\n",
        "outputs": 1,
        "noerr": 0,
        "x": 667,
        "y": 758,
        "wires": [
            [
                "bcc9a300.5ab01"
            ]
        ]
    },
    {
        "id": "bcc9a300.5ab01",
        "type": "delay",
        "z": "b9ab96ac.e0e8a8",
        "name": "",
        "pauseType": "rate",
        "timeout": "5",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "5",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": true,
        "x": 913.5,
        "y": 753.449951171875,
        "wires": [
            [
                "1d34b61f.92ecfa"
            ]
        ]
    },
    {
        "id": "199063ad.175bdc",
        "type": "function",
        "z": "b9ab96ac.e0e8a8",
        "name": "FilterEventByMotion",
        "func": "var jsonObj = msg.payload;\nif (jsonObj.Measurement === \"motion\") {\n\n    return msg;\n}\nif (jsonObj.Measurement === \"motion2\") {\n\n    return msg;\n}",
        "outputs": 1,
        "noerr": 0,
        "x": 184,
        "y": 845,
        "wires": [
            [
                "94c38689.4fb0e8"
            ]
        ]
    },
    {
        "id": "d8aec4df.fb2be8",
        "type": "function",
        "z": "b9ab96ac.e0e8a8",
        "name": "SetActionValuesLightON",
        "func": "//\n// Set all the values needed for an action string\n\n// pin number is hardcoded and based on value set in sketch\nmsg.payload.pinNumber = 13;\n// just a unique id for action\nmsg.payload.actionId = Math.round(Math.random()*10000);\nif( msg.payload.Value === \"1\" ) {\n    msg.payload.pinValue = \"HIGH\";\n    return msg;\n}\nreturn null;\n",
        "outputs": 1,
        "noerr": 0,
        "x": 661.5,
        "y": 859.449951171875,
        "wires": [
            [
                "20b16928.81aa16"
            ]
        ]
    },
    {
        "id": "94c38689.4fb0e8",
        "type": "switch",
        "z": "b9ab96ac.e0e8a8",
        "name": "DetectMotion",
        "property": "payload.Value",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "1",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "0",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "outputs": 2,
        "x": 405.5,
        "y": 842.449951171875,
        "wires": [
            [
                "419fd73a.a05708"
            ],
            [
                "4fc5845f.4c73cc"
            ]
        ]
    },
    {
        "id": "4fc5845f.4c73cc",
        "type": "function",
        "z": "b9ab96ac.e0e8a8",
        "name": "SetActionValuesLightOFF",
        "func": "//\n// Set all the values needed for an action string\n\n// pin number is hardcoded and based on value set in sketch\nmsg.payload.pinNumber = 13;\n// just a unique id for action\nmsg.payload.actionId = Math.round(Math.random()*10000);\nif( msg.payload.Value === \"0\" ) {\n    msg.payload.pinValue = \"LOW\";\n    return msg;\n}\nreturn null;\n",
        "outputs": 1,
        "noerr": 0,
        "x": 655,
        "y": 906,
        "wires": [
            [
                "f6a15422.79a848"
            ]
        ]
    },
    {
        "id": "f6a15422.79a848",
        "type": "delay",
        "z": "b9ab96ac.e0e8a8",
        "name": "",
        "pauseType": "rate",
        "timeout": "5",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "5",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": true,
        "x": 908.5,
        "y": 890.449951171875,
        "wires": [
            [
                "1d34b61f.92ecfa"
            ]
        ]
    },
    {
        "id": "7934e013.4435e",
        "type": "delay",
        "z": "b9ab96ac.e0e8a8",
        "name": "",
        "pauseType": "rate",
        "timeout": "5",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "5",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": true,
        "x": 906,
        "y": 352,
        "wires": [
            [
                "1d34b61f.92ecfa"
            ]
        ]
    },
    {
        "id": "e52b56cc.c9a1f8",
        "type": "delay",
        "z": "b9ab96ac.e0e8a8",
        "name": "",
        "pauseType": "rate",
        "timeout": "5",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "5",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": true,
        "x": 905,
        "y": 527,
        "wires": [
            [
                "1d34b61f.92ecfa"
            ]
        ]
    },
    {
        "id": "96bce922.863ad8",
        "type": "delay",
        "z": "b9ab96ac.e0e8a8",
        "name": "",
        "pauseType": "rate",
        "timeout": "5",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "5",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": true,
        "x": 902,
        "y": 705,
        "wires": [
            [
                "1d34b61f.92ecfa"
            ]
        ]
    },
    {
        "id": "20b16928.81aa16",
        "type": "delay",
        "z": "b9ab96ac.e0e8a8",
        "name": "",
        "pauseType": "rate",
        "timeout": "5",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "5",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": true,
        "x": 911,
        "y": 830,
        "wires": [
            [
                "1d34b61f.92ecfa"
            ]
        ]
    },
    {
        "id": "ee99f015.33a19",
        "type": "mqtt in",
        "z": "4c9633fe.a93e5c",
        "name": "SensorData",
        "topic": "SensorData",
        "broker": "cc1d437c.d2949",
        "x": 106,
        "y": 65,
        "wires": [
            [
                "914389b.97d7878"
            ]
        ]
    },
    {
        "id": "914389b.97d7878",
        "type": "function",
        "z": "4c9633fe.a93e5c",
        "name": "ChkZeroLenMsg",
        "func": "if (msg.payload.length > 0 )\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 322,
        "y": 66,
        "wires": [
            [
                "fc7d9863.6e7088"
            ]
        ]
    },
    {
        "id": "fc7d9863.6e7088",
        "type": "function",
        "z": "4c9633fe.a93e5c",
        "name": "ChkCleanJSONString",
        "func": "// check for fully formed JSON string\nvar temp = msg.payload;\nvar strLen = msg.payload.length;\nif( (temp.indexOf(\"{\") === 0) && (temp.indexOf(\"}\") === (strLen-1)))\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 557,
        "y": 66,
        "wires": [
            [
                "a6967aab.e17438"
            ]
        ]
    },
    {
        "id": "a6967aab.e17438",
        "type": "json",
        "z": "4c9633fe.a93e5c",
        "name": "ConvertToJSON",
        "x": 776,
        "y": 66,
        "wires": [
            [
                "dd8df698.c6ddf8"
            ]
        ]
    },
    {
        "id": "dd8df698.c6ddf8",
        "type": "function",
        "z": "4c9633fe.a93e5c",
        "name": "RoundOff",
        "func": "var attribute = msg.payload.Measurement;\nvar value = msg.payload.Value;\nif( attribute === \"light\" || \n    attribute === \"light2\") { // discretize to 20 values\n    msg.payload.Value = Math.floor(value/50);\n}\n\nif( attribute === \"temperature\") { // round off\n    msg.payload.Value = Math.round(value);\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 142,
        "y": 194.1428451538086,
        "wires": [
            [
                "a004000e.d625"
            ]
        ]
    },
    {
        "id": "a004000e.d625",
        "type": "switch",
        "z": "4c9633fe.a93e5c",
        "name": "ForEachSensor",
        "property": "payload.SensorId",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "1",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "2",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "3",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "4",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "5",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "outputs": 5,
        "x": 113,
        "y": 398,
        "wires": [
            [
                "9df51f9a.ca38a"
            ],
            [
                "8834992e.5c5828",
                "36eedd05.7e15a2"
            ],
            [
                "385727.294e68da"
            ],
            [
                "df3df535.eaee68"
            ],
            [
                "48e07366.7c8efc",
                "22192be2.dac964",
                "d0fc66b3.504848"
            ]
        ]
    },
    {
        "id": "9df51f9a.ca38a",
        "type": "function",
        "z": "4c9633fe.a93e5c",
        "name": "SetLightState1",
        "func": "var jsonObj = msg.payload;\nvar stateVar = \"SENSOR1LIGHT\";\n\nif( jsonObj.Measurement === \"light\" || \n    jsonObj.Measurement === \"light2\" ) {\n    var lightLevel = jsonObj.Value;\n    if( lightLevel < 8 ) {\n        global.set(stateVar, \"DARK\");\n    }\n    if( lightLevel > 10 ) {\n        global.set(stateVar, \"BRIGHT\");\n    }\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 683.6428680419922,
        "y": 181.73568725585938,
        "wires": [
            []
        ]
    },
    {
        "id": "8834992e.5c5828",
        "type": "function",
        "z": "4c9633fe.a93e5c",
        "name": "SetLightState2",
        "func": "var jsonObj = msg.payload;\nvar stateVar = \"SENSOR2LIGHT\";\n\nif( jsonObj.Measurement === \"light\") {\n    var lightLevel = jsonObj.Value;\n    if( lightLevel < 8 ) {\n        global.set(stateVar, \"DARK\");\n    }\n    if( lightLevel > 10 ) {\n        global.set(stateVar, \"BRIGHT\");\n    }\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 673.9999847412109,
        "y": 237,
        "wires": [
            []
        ]
    },
    {
        "id": "385727.294e68da",
        "type": "function",
        "z": "4c9633fe.a93e5c",
        "name": "SetLightState3",
        "func": "var jsonObj = msg.payload;\nvar stateVar = \"SENSOR3LIGHT\";\n\nif( jsonObj.Measurement === \"light\" || \n    jsonObj.Measurement === \"light2\" ) {\n    var lightLevel = jsonObj.Value;\n    if( lightLevel < 8 ) {\n        global.set(stateVar, \"DARK\");\n    }\n    if( lightLevel > 10 ) {\n        global.set(stateVar, \"BRIGHT\");\n    }\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 627.9999847412109,
        "y": 471,
        "wires": [
            []
        ]
    },
    {
        "id": "df3df535.eaee68",
        "type": "function",
        "z": "4c9633fe.a93e5c",
        "name": "SetLightState4",
        "func": "var jsonObj = msg.payload;\nvar stateVar = \"SENSOR4LIGHT\";\n\nif( jsonObj.Measurement === \"light\" || \n    jsonObj.Measurement === \"light2\" ) {\n    var lightLevel = jsonObj.Value;\n    if( lightLevel < 8 ) {\n        global.set(stateVar, \"DARK\");\n    }\n    if( lightLevel > 10 ) {\n        global.set(stateVar, \"BRIGHT\");\n    }\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 626.9999847412109,
        "y": 620.0000915527344,
        "wires": [
            []
        ]
    },
    {
        "id": "81f35bc6.05caa8",
        "type": "function",
        "z": "b9ab96ac.e0e8a8",
        "name": "CheckLightLevel1",
        "func": "var stateVar = \"SENSOR1LIGHT\";\n\nvar lightLevel = global.get(stateVar)||\"DARK\";\nif( lightLevel === \"LIGHT\") {\n    return null;\n}\nelse {\n    return msg;\n}",
        "outputs": 1,
        "noerr": 0,
        "x": 646.0714416503906,
        "y": 291.30712127685547,
        "wires": [
            [
                "1be79b06.b6d685"
            ]
        ]
    },
    {
        "id": "47cf6bf4.8bac24",
        "type": "function",
        "z": "b9ab96ac.e0e8a8",
        "name": "CheckLightLevel2",
        "func": "var stateVar = \"SENSOR2LIGHT\";\n\nvar lightLevel = global.get(stateVar)||\"DARK\";\nif( lightLevel === \"BRIGHT\") {\n    return null;\n}\nelse {\n    return msg;\n}",
        "outputs": 1,
        "noerr": 0,
        "x": 648,
        "y": 466,
        "wires": [
            [
                "8dd8f218.c218d"
            ]
        ]
    },
    {
        "id": "aecd6fcb.034d9",
        "type": "function",
        "z": "b9ab96ac.e0e8a8",
        "name": "CheckLightLevel3",
        "func": "var stateVar = \"SENSOR3LIGHT\";\n\nvar lightLevel = global.get(stateVar)||\"DARK\";\nif( lightLevel === \"BRIGHT\") {\n    return null;\n}\nelse {\n    return msg;\n}",
        "outputs": 1,
        "noerr": 0,
        "x": 646.8572692871094,
        "y": 646.1429061889648,
        "wires": [
            [
                "8f0b7c98.4113b"
            ]
        ]
    },
    {
        "id": "419fd73a.a05708",
        "type": "function",
        "z": "b9ab96ac.e0e8a8",
        "name": "CheckLightLevel4",
        "func": "var stateVar = \"SENSOR4LIGHT\";\n\nvar lightLevel = global.get(stateVar)||\"DARK\";\nif( lightLevel === \"BRIGHT\") {\n    return null;\n}\nelse {\n    return msg;\n}",
        "outputs": 1,
        "noerr": 0,
        "x": 652,
        "y": 811,
        "wires": [
            [
                "d8aec4df.fb2be8"
            ]
        ]
    },
    {
        "id": "4a7d926f.e5a56c",
        "type": "inject",
        "z": "554dac59.82b8d4",
        "name": "ON",
        "topic": "",
        "payload": "ACTION,5,5555,SETPIN,7,HIGH",
        "payloadType": "str",
        "repeat": "",
        "crontab": "",
        "once": false,
        "x": 146,
        "y": 190,
        "wires": [
            [
                "787ffaff.9d08c4"
            ]
        ]
    },
    {
        "id": "787ffaff.9d08c4",
        "type": "mqtt out",
        "z": "554dac59.82b8d4",
        "name": "",
        "topic": "inTopic",
        "qos": "",
        "retain": "",
        "broker": "cc1d437c.d2949",
        "x": 419,
        "y": 227,
        "wires": []
    },
    {
        "id": "983d166d.e87a38",
        "type": "inject",
        "z": "554dac59.82b8d4",
        "name": "OFF",
        "topic": "",
        "payload": "ACTION,5,5555,SETPIN,7,LOW",
        "payloadType": "str",
        "repeat": "",
        "crontab": "",
        "once": false,
        "x": 141,
        "y": 113,
        "wires": [
            [
                "787ffaff.9d08c4"
            ]
        ]
    },
    {
        "id": "1b496a0f.91acc6",
        "type": "inject",
        "z": "554dac59.82b8d4",
        "name": "heartbeat",
        "topic": "",
        "payload": "ACTION,5,5555,SETPIN,12,HIGH",
        "payloadType": "str",
        "repeat": "",
        "crontab": "",
        "once": false,
        "x": 160,
        "y": 267,
        "wires": [
            [
                "787ffaff.9d08c4"
            ]
        ]
    },
    {
        "id": "c081da74.2e17c8",
        "type": "comment",
        "z": "554dac59.82b8d4",
        "name": "Pin relay mapping",
        "info": "Pin 6 = Room Light\nPin 5 = Air\nPin 7 = Tank Light ",
        "x": 179,
        "y": 54,
        "wires": []
    },
    {
        "id": "48e07366.7c8efc",
        "type": "function",
        "z": "4c9633fe.a93e5c",
        "name": "SetLightState5",
        "func": "var jsonObj = msg.payload;\nvar stateVar = \"SENSOR5LIGHT\";\n\nif(jsonObj.Measurement === \"light2\" ) {\n    var lightLevel = jsonObj.Value;\n    if( lightLevel < 9 ) {\n        global.set(stateVar, \"DARK\");\n    }\n    if( lightLevel > 10 ) {\n        global.set(stateVar, \"BRIGHT\");\n    }\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 648.9999847412109,
        "y": 751.0000305175781,
        "wires": [
            []
        ]
    },
    {
        "id": "4700efbc.00b39",
        "type": "function",
        "z": "b9ab96ac.e0e8a8",
        "name": "FilterEventByMotion",
        "func": "var jsonObj = msg.payload;\nif (jsonObj.Measurement === \"motion\") {\n\n    return msg;\n}\nif (jsonObj.Measurement === \"motion2\") {\n\n    return msg;\n}",
        "outputs": 1,
        "noerr": 0,
        "x": 185.66665649414062,
        "y": 1002,
        "wires": [
            [
                "3676408e.b3a8f"
            ]
        ]
    },
    {
        "id": "19407dcc.b0aa42",
        "type": "function",
        "z": "b9ab96ac.e0e8a8",
        "name": "SetActionValuesLightON",
        "func": "//\n// Set all the values needed for an action string\n\n// pin number is hardcoded and based on value set in sketch\n// for this sensor in Family room it drives room light through relay on pin 6\nmsg.payload.pinNumber = 6; \n// just a unique id for action\nmsg.payload.actionId = Math.round(Math.random()*10000);\nif( msg.payload.Value === \"1\" ) {\n    // pin logic is inverted to drive relay\n    // LOW turns relay on\n    msg.payload.pinValue = \"LOW\";\n    return msg;\n}\nreturn null;\n",
        "outputs": 1,
        "noerr": 0,
        "x": 667.1666564941406,
        "y": 1016.449951171875,
        "wires": [
            [
                "21952b3f.2356b4"
            ]
        ]
    },
    {
        "id": "3676408e.b3a8f",
        "type": "switch",
        "z": "b9ab96ac.e0e8a8",
        "name": "DetectMotion",
        "property": "payload.Value",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "1",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "0",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "outputs": 2,
        "x": 411.1666564941406,
        "y": 999.449951171875,
        "wires": [
            [
                "7a8fa832.f00b58"
            ],
            [
                "1260681e.2bf158"
            ]
        ]
    },
    {
        "id": "1260681e.2bf158",
        "type": "function",
        "z": "b9ab96ac.e0e8a8",
        "name": "SetActionValuesLightOFF",
        "func": "//\n// Set all the values needed for an action string\n\n// pin number is hardcoded and based on value set in sketch\nmsg.payload.pinNumber = 6;\n// just a unique id for action\nmsg.payload.actionId = Math.round(Math.random()*10000);\nif( msg.payload.Value === \"0\" ) {\n    // pin logic is inverted to drive relay\n    // HIGH turns relay off\n    msg.payload.pinValue = \"HIGH\";\n    return msg;\n}\nreturn null;\n",
        "outputs": 1,
        "noerr": 0,
        "x": 660.6666564941406,
        "y": 1063,
        "wires": [
            [
                "54aa5f17.f40fa"
            ]
        ]
    },
    {
        "id": "54aa5f17.f40fa",
        "type": "delay",
        "z": "b9ab96ac.e0e8a8",
        "name": "",
        "pauseType": "rate",
        "timeout": "5",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "5",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": true,
        "x": 914.1666564941406,
        "y": 1047.449951171875,
        "wires": [
            [
                "1d34b61f.92ecfa"
            ]
        ]
    },
    {
        "id": "21952b3f.2356b4",
        "type": "delay",
        "z": "b9ab96ac.e0e8a8",
        "name": "",
        "pauseType": "rate",
        "timeout": "5",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "30",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": true,
        "x": 916.6666564941406,
        "y": 987,
        "wires": [
            [
                "1d34b61f.92ecfa"
            ]
        ]
    },
    {
        "id": "7a8fa832.f00b58",
        "type": "function",
        "z": "b9ab96ac.e0e8a8",
        "name": "CheckLightLevel5",
        "func": "var stateVar = \"SENSOR5LIGHT\";\n\nvar lightLevel = global.get(stateVar)||\"DARK\";\nif( lightLevel === \"BRIGHT\") {\n    return null;\n}\nelse {\n    return msg;\n}",
        "outputs": 1,
        "noerr": 0,
        "x": 657.6666564941406,
        "y": 968,
        "wires": [
            [
                "19407dcc.b0aa42"
            ]
        ]
    },
    {
        "id": "4632ca8b.a96dc4",
        "type": "function",
        "z": "5ed2a187.b6993",
        "name": "TankLightON",
        "func": "//\n// Set all the values needed for an action string\nvar newMsg;\n\n// pin number is hardcoded and based on value set in sketch\nnewMsg = {\"SensorId\":\"5\",\n    \"pinNumber\": \"7\", \n    \"actionId\": Math.round(Math.random()*10000),\n    \"pinValue\": \"LOW\"};\n\nmsg.payload = newMsg;\n\nreturn msg;\n\n\n",
        "outputs": 1,
        "noerr": 0,
        "x": 307.6666564941406,
        "y": 153.66661834716797,
        "wires": [
            [
                "7cf6867e.d17348"
            ]
        ]
    },
    {
        "id": "7cf6867e.d17348",
        "type": "function",
        "z": "5ed2a187.b6993",
        "name": "CreateAction",
        "func": "// \nvar sensorId; // contains the sensorId to send message to\nvar pinNumber; // which pin to change <int>\nvar pinValue; // value to set: HIGH, LOW, <int>\n\n//\n// Create action message to be sent to sensor\n//\nvar actionStr = \"ACTION,\";\nactionStr += msg.payload.SensorId;\nactionStr += \",\";\nactionStr += msg.payload.actionId;\nactionStr += \",SETPIN,\";\nactionStr += msg.payload.pinNumber;\nactionStr += \",\";\nactionStr += msg.payload.pinValue;\n\nmsg.payload = actionStr;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 569.6666564941406,
        "y": 182.6666488647461,
        "wires": [
            [
                "a45580a7.58a27",
                "57bac784.112618"
            ]
        ]
    },
    {
        "id": "234dcab7.3059b6",
        "type": "function",
        "z": "5ed2a187.b6993",
        "name": "TankLightOFF",
        "func": "//\n// Set all the values needed for an action string\nvar newMsg;\n\n// pin number is hardcoded and based on value set in sketch\nnewMsg = {\"SensorId\":\"5\",\n    \"pinNumber\": \"7\", \n    \"actionId\": Math.round(Math.random()*10000),\n    \"pinValue\": \"HIGH\"};\n\nmsg.payload = newMsg;\n\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "x": 320.6666564941406,
        "y": 237.66663360595703,
        "wires": [
            [
                "7cf6867e.d17348"
            ]
        ]
    },
    {
        "id": "4242b351.65365c",
        "type": "comment",
        "z": "5ed2a187.b6993",
        "name": "Pin relay mapping",
        "info": "Pin 6 = Room Light\nPin 5 = Air\nPin 7 = Tank Light ",
        "x": 327.6666259765625,
        "y": 38.666664123535156,
        "wires": []
    },
    {
        "id": "a45580a7.58a27",
        "type": "mqtt out",
        "z": "5ed2a187.b6993",
        "name": "",
        "topic": "inTopic",
        "qos": "",
        "retain": "",
        "broker": "cc1d437c.d2949",
        "x": 778.6665954589844,
        "y": 231.6666488647461,
        "wires": []
    },
    {
        "id": "b4596b32.835e08",
        "type": "inject",
        "z": "5ed2a187.b6993",
        "name": "7am",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "repeat": "",
        "crontab": "00 7 * * *",
        "once": false,
        "x": 100.5,
        "y": 94.33332824707031,
        "wires": [
            [
                "4632ca8b.a96dc4"
            ]
        ]
    },
    {
        "id": "7a9136c6.a6c478",
        "type": "inject",
        "z": "5ed2a187.b6993",
        "name": "1130am",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "repeat": "",
        "crontab": "30 11 * * *",
        "once": false,
        "x": 110.5,
        "y": 209.33334350585938,
        "wires": [
            [
                "234dcab7.3059b6"
            ]
        ]
    },
    {
        "id": "57bac784.112618",
        "type": "debug",
        "z": "5ed2a187.b6993",
        "name": "",
        "active": false,
        "console": "false",
        "complete": "false",
        "x": 791.5000305175781,
        "y": 122.00000762939453,
        "wires": []
    },
    {
        "id": "8913c149.a93b3",
        "type": "inject",
        "z": "5ed2a187.b6993",
        "name": "7:05am",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "repeat": "",
        "crontab": "05 7 * * *",
        "once": false,
        "x": 124.89581298828125,
        "y": 327.8888854980469,
        "wires": [
            [
                "cf63ce80.d51b5"
            ]
        ]
    },
    {
        "id": "cf63ce80.d51b5",
        "type": "function",
        "z": "5ed2a187.b6993",
        "name": "TankAirON",
        "func": "//\n// Set all the values needed for an action string\nvar newMsg;\n\n// pin number is hardcoded and based on value set in sketch\nnewMsg = {\"SensorId\":\"5\",\n    \"pinNumber\": \"5\", \n    \"actionId\": Math.round(Math.random()*10000),\n    \"pinValue\": \"LOW\"};\n\nmsg.payload = newMsg;\n\nreturn msg;\n\n\n",
        "outputs": 1,
        "noerr": 0,
        "x": 363.06243896484375,
        "y": 394.22216796875,
        "wires": [
            [
                "fcc45ba.4fea7a8"
            ]
        ]
    },
    {
        "id": "fcc45ba.4fea7a8",
        "type": "function",
        "z": "5ed2a187.b6993",
        "name": "CreateAction",
        "func": "// \nvar sensorId; // contains the sensorId to send message to\nvar pinNumber; // which pin to change <int>\nvar pinValue; // value to set: HIGH, LOW, <int>\n\n//\n// Create action message to be sent to sensor\n//\nvar actionStr = \"ACTION,\";\nactionStr += msg.payload.SensorId;\nactionStr += \",\";\nactionStr += msg.payload.actionId;\nactionStr += \",SETPIN,\";\nactionStr += msg.payload.pinNumber;\nactionStr += \",\";\nactionStr += msg.payload.pinValue;\n\nmsg.payload = actionStr;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 582.0624694824219,
        "y": 435.22220611572266,
        "wires": [
            [
                "7cbdf5d9.6e66ac",
                "254addc4.2080f2"
            ]
        ]
    },
    {
        "id": "7aaf7c94.e581a4",
        "type": "function",
        "z": "5ed2a187.b6993",
        "name": "TankAirOFF",
        "func": "//\n// Set all the values needed for an action string\nvar newMsg;\n\n// pin number is hardcoded and based on value set in sketch\nnewMsg = {\"SensorId\":\"5\",\n    \"pinNumber\": \"5\", \n    \"actionId\": Math.round(Math.random()*10000),\n    \"pinValue\": \"HIGH\"};\n\nmsg.payload = newMsg;\n\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "x": 363.0624542236328,
        "y": 574.2222290039062,
        "wires": [
            [
                "fcc45ba.4fea7a8"
            ]
        ]
    },
    {
        "id": "7cbdf5d9.6e66ac",
        "type": "mqtt out",
        "z": "5ed2a187.b6993",
        "name": "",
        "topic": "inTopic",
        "qos": "",
        "retain": "",
        "broker": "cc1d437c.d2949",
        "x": 791.0624084472656,
        "y": 484.22220611572266,
        "wires": []
    },
    {
        "id": "254addc4.2080f2",
        "type": "debug",
        "z": "5ed2a187.b6993",
        "name": "",
        "active": false,
        "console": "false",
        "complete": "false",
        "x": 803.8958435058594,
        "y": 374.5555648803711,
        "wires": []
    },
    {
        "id": "6d7bb78d.9f93e8",
        "type": "inject",
        "z": "5ed2a187.b6993",
        "name": "NOW",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "repeat": "",
        "crontab": "",
        "once": false,
        "x": 126.89579772949219,
        "y": 753.8889465332031,
        "wires": [
            [
                "7aaf7c94.e581a4"
            ]
        ]
    },
    {
        "id": "4133fa7.3947704",
        "type": "function",
        "z": "9e5c4afc.dcc398",
        "name": "CountUPMessages",
        "func": "var count = context.get('count')||0;\nvar lastTime = context.get('lastTime')||0;\n\nvar currMillis = new Date().valueOf();\nif( (currMillis - lastTime) > 15000) { // 15 secs aggregation\n\n    if( count === 0) {\n        msg.payload = \"Sensor 5 is DOWN.\";\n    }\n    else {\n        msg.payload = \"Sensor 5 is UP.\";\n    }\n           \n    context.set('count',0);\n    context.set('lastTime', currMillis);\n    return msg;\n}\ncount++;\ncontext.set('count',count);\n\nreturn null;",
        "outputs": 1,
        "noerr": 0,
        "x": 535.3402709960938,
        "y": 376.4444580078125,
        "wires": [
            [
                "6be46a7.d26eb94"
            ]
        ]
    },
    {
        "id": "6be46a7.d26eb94",
        "type": "ui_text",
        "z": "9e5c4afc.dcc398",
        "group": "365a7e4.2189602",
        "order": 1,
        "width": "",
        "height": "",
        "name": "Status:",
        "label": "",
        "format": "{{msg.payload}}",
        "layout": "",
        "x": 854.3402709960938,
        "y": 374.4444580078125,
        "wires": []
    },
    {
        "id": "fc336f79.ac68a",
        "type": "function",
        "z": "e4f639c8.94dc68",
        "name": "TempSensor5",
        "func": "var jsonObj = msg.payload;\nif (jsonObj.Measurement === \"temperature2\") {\n    var temp = jsonObj.Value;\n    msg.payload = temp;\n    return msg;\n}",
        "outputs": 1,
        "noerr": 0,
        "x": 649.7847290039062,
        "y": 1017,
        "wires": [
            [
                "77c06111.1153a",
                "f742d3ac.e617d"
            ]
        ]
    },
    {
        "id": "759109b.f80cff8",
        "type": "function",
        "z": "e4f639c8.94dc68",
        "name": "LightSensor5",
        "func": "var jsonObj = msg.payload;\nif (jsonObj.Measurement === \"light2\") {\n    var temp = jsonObj.Value;\n    msg.payload = temp;\n    return msg;\n}",
        "outputs": 1,
        "noerr": 0,
        "x": 636.7846984863281,
        "y": 1066.0000305175781,
        "wires": [
            [
                "e97721bb.c6093",
                "99d5abf5.cbc428"
            ]
        ]
    },
    {
        "id": "e97721bb.c6093",
        "type": "ui_chart",
        "z": "e4f639c8.94dc68",
        "name": "ChartFamilyLight",
        "group": "1dd8fe74.d9e64a",
        "order": 2,
        "width": "",
        "height": "",
        "label": "Light Level",
        "chartType": "line",
        "xformat": "HH",
        "interpolate": "basis",
        "nodata": "No Data",
        "ymin": "",
        "ymax": "",
        "removeOlder": 1,
        "removeOlderPoints": "",
        "removeOlderUnit": "86400",
        "cutout": "",
        "x": 1101.7846374511719,
        "y": 1073.0000915527344,
        "wires": [
            [],
            []
        ]
    },
    {
        "id": "f742d3ac.e617d",
        "type": "ui_gauge",
        "z": "e4f639c8.94dc68",
        "name": "GaugeFamilyTemp",
        "group": "b3fd31f5.13e4b",
        "order": 1,
        "width": "5",
        "height": "3",
        "gtype": "gage",
        "title": "",
        "label": "",
        "format": "{{value}}",
        "min": "60",
        "max": "80",
        "colors": [
            "#0000ff",
            "#e6e600",
            "#ca3838"
        ],
        "x": 1095.7847290039062,
        "y": 1017,
        "wires": []
    },
    {
        "id": "77c06111.1153a",
        "type": "ui_chart",
        "z": "e4f639c8.94dc68",
        "name": "ChartFamilyTemp",
        "group": "1dd8fe74.d9e64a",
        "order": 1,
        "width": "",
        "height": "",
        "label": "Temperature",
        "chartType": "line",
        "xformat": "HH:mm",
        "interpolate": "step-after",
        "nodata": "No Data",
        "ymin": "60",
        "ymax": "80",
        "removeOlder": 1,
        "removeOlderPoints": "",
        "removeOlderUnit": "86400",
        "cutout": "",
        "x": 1092.7847290039062,
        "y": 975,
        "wires": [
            [],
            []
        ]
    },
    {
        "id": "d67a687.06eda98",
        "type": "function",
        "z": "e4f639c8.94dc68",
        "name": "TempSensor5Tank",
        "func": "var jsonObj = msg.payload;\nif (jsonObj.Measurement === \"temperature1\") {\n    var temp = jsonObj.Value;\n    msg.payload = temp;\n    return msg;\n}",
        "outputs": 1,
        "noerr": 0,
        "x": 644.673583984375,
        "y": 1136.5555419921875,
        "wires": [
            [
                "c996e9b1.c06418",
                "3c8b3134.672e7e"
            ]
        ]
    },
    {
        "id": "3c8b3134.672e7e",
        "type": "ui_gauge",
        "z": "e4f639c8.94dc68",
        "name": "GaugeFishTankTemp",
        "group": "38b95dcf.9ddf82",
        "order": 1,
        "width": "5",
        "height": "3",
        "gtype": "gage",
        "title": "",
        "label": "",
        "format": "{{value}}",
        "min": "60",
        "max": "80",
        "colors": [
            "#0000ff",
            "#e6e600",
            "#ca3838"
        ],
        "x": 1091.6735534667969,
        "y": 1191.5555114746094,
        "wires": []
    },
    {
        "id": "c996e9b1.c06418",
        "type": "ui_chart",
        "z": "e4f639c8.94dc68",
        "name": "ChartFishtankTemp",
        "group": "1455e795.d241a8",
        "order": 1,
        "width": "",
        "height": "",
        "label": "Temperature",
        "chartType": "line",
        "xformat": "HH:mm",
        "interpolate": "step-after",
        "nodata": "No Data",
        "ymin": "60",
        "ymax": "80",
        "removeOlder": 1,
        "removeOlderPoints": "",
        "removeOlderUnit": "86400",
        "cutout": "",
        "x": 1072.6735534667969,
        "y": 1132.5555114746094,
        "wires": [
            [],
            []
        ]
    },
    {
        "id": "a0f61706.ca6b08",
        "type": "inject",
        "z": "e4f639c8.94dc68",
        "name": "",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "repeat": "3600",
        "crontab": "",
        "once": false,
        "x": 115.38543701171875,
        "y": 59.638916015625,
        "wires": [
            [
                "948844df.5a4738"
            ]
        ]
    },
    {
        "id": "948844df.5a4738",
        "type": "http request",
        "z": "e4f639c8.94dc68",
        "name": "CallWeatherAPI",
        "method": "GET",
        "ret": "obj",
        "url": "http://api.openweathermap.org/data/2.5/weather?id=6331909&APPID=702c2966b1ca909d0e4b6e2bfff14cd8",
        "tls": "",
        "x": 336.3923645019531,
        "y": 60.8194580078125,
        "wires": [
            [
                "4deb7f6a.a3e23"
            ]
        ]
    },
    {
        "id": "4deb7f6a.a3e23",
        "type": "function",
        "z": "e4f639c8.94dc68",
        "name": "GetCurrentTemp",
        "func": "var temp = msg.payload.main.temp;\ntemp = Math.round(((temp-273)*9/5)+32);\nmsg.payload = temp;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 558.3889465332031,
        "y": 66.7742919921875,
        "wires": [
            [
                "51e9ac9d.b9fa34",
                "1d9ff514.49f08b",
                "9b54b12f.a193f"
            ]
        ]
    },
    {
        "id": "763f6422.aa4bec",
        "type": "function",
        "z": "e4f639c8.94dc68",
        "name": "TempSensor1",
        "func": "var jsonObj = msg.payload;\nif (jsonObj.Measurement === \"temperature\") {\n    var temp = jsonObj.Value;\n    msg.payload = temp;\n    return msg;\n}",
        "outputs": 1,
        "noerr": 0,
        "x": 622.451416015625,
        "y": 538.8888854980469,
        "wires": [
            [
                "e46c8fc0.046a3",
                "c46582ba.451fb"
            ]
        ]
    },
    {
        "id": "51f72c2a.b37a14",
        "type": "function",
        "z": "e4f639c8.94dc68",
        "name": "LightSensor1",
        "func": "var jsonObj = msg.payload;\n\nif (jsonObj.Measurement === \"light2\") {\n    var temp = jsonObj.Value;\n    msg.payload = temp;\n    return msg;\n}",
        "outputs": "1",
        "noerr": 0,
        "x": 610.451416015625,
        "y": 576.8888854980469,
        "wires": [
            [
                "90bd8e4b.b3999",
                "a6dff883.5c1508"
            ]
        ]
    },
    {
        "id": "c46582ba.451fb",
        "type": "ui_chart",
        "z": "e4f639c8.94dc68",
        "name": "ChartBasementRoomTemp",
        "group": "80591c0e.9d6dd",
        "order": 1,
        "width": "",
        "height": "",
        "label": "Temperature",
        "chartType": "line",
        "xformat": "HH:mm",
        "interpolate": "step-after",
        "nodata": "No Data",
        "ymin": "60",
        "ymax": "80",
        "removeOlder": 1,
        "removeOlderPoints": "",
        "removeOlderUnit": "86400",
        "cutout": "",
        "x": 959.451416015625,
        "y": 511.8888854980469,
        "wires": [
            [],
            []
        ]
    },
    {
        "id": "e46c8fc0.046a3",
        "type": "ui_gauge",
        "z": "e4f639c8.94dc68",
        "name": "GaugeBasementRoomTemp",
        "group": "753e8570.d94fac",
        "order": 1,
        "width": "5",
        "height": "3",
        "gtype": "gage",
        "title": "",
        "label": "",
        "format": "{{value}}",
        "min": "60",
        "max": "80",
        "colors": [
            "#0000ff",
            "#e6e600",
            "#ca3838"
        ],
        "x": 956.451416015625,
        "y": 548.8888854980469,
        "wires": []
    },
    {
        "id": "51e9ac9d.b9fa34",
        "type": "ui_gauge",
        "z": "e4f639c8.94dc68",
        "name": "",
        "group": "f7452d6c.92a3f",
        "order": 1,
        "width": "5",
        "height": "3",
        "gtype": "gage",
        "title": "Temperature",
        "label": "External Temperature",
        "format": "{{value}}",
        "min": "20",
        "max": "100",
        "colors": [
            "#00b500",
            "#e6e600",
            "#ca3838"
        ],
        "x": 838.3819898087302,
        "y": 67.91668969613488,
        "wires": []
    },
    {
        "id": "df44754c.5444d8",
        "type": "inject",
        "z": "5ed2a187.b6993",
        "name": "3pm",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "repeat": "",
        "crontab": "00 15 * * *",
        "once": false,
        "x": 102.89582824707031,
        "y": 141.88888549804688,
        "wires": [
            [
                "4632ca8b.a96dc4"
            ]
        ]
    },
    {
        "id": "458f41b3.a576e",
        "type": "inject",
        "z": "5ed2a187.b6993",
        "name": "9pm",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "repeat": "",
        "crontab": "00 21 * * *",
        "once": false,
        "x": 102.89582824707031,
        "y": 256.8888854980469,
        "wires": [
            [
                "234dcab7.3059b6"
            ]
        ]
    },
    {
        "id": "45d6fdfd.580884",
        "type": "inject",
        "z": "5ed2a187.b6993",
        "name": "10:05am",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "repeat": "",
        "crontab": "05 10 * * *",
        "once": false,
        "x": 125.89582824707031,
        "y": 366.8888854980469,
        "wires": [
            [
                "cf63ce80.d51b5"
            ]
        ]
    },
    {
        "id": "2cc42caa.c3b834",
        "type": "inject",
        "z": "5ed2a187.b6993",
        "name": "3:05pm",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "repeat": "",
        "crontab": "05 15 * * *",
        "once": false,
        "x": 125.89582824707031,
        "y": 404.8888854980469,
        "wires": [
            [
                "cf63ce80.d51b5"
            ]
        ]
    },
    {
        "id": "6d798904.9f6608",
        "type": "inject",
        "z": "5ed2a187.b6993",
        "name": "5:05pm",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "repeat": "",
        "crontab": "05 17 * * *",
        "once": false,
        "x": 123.89582824707031,
        "y": 441.888916015625,
        "wires": [
            [
                "cf63ce80.d51b5"
            ]
        ]
    },
    {
        "id": "4b83ae0b.f63d2",
        "type": "inject",
        "z": "5ed2a187.b6993",
        "name": "9:05pm",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "repeat": "",
        "crontab": "05 21 * * *",
        "once": false,
        "x": 123.89582824707031,
        "y": 476.8888854980469,
        "wires": [
            [
                "cf63ce80.d51b5"
            ]
        ]
    },
    {
        "id": "1f42284f.94aee8",
        "type": "inject",
        "z": "5ed2a187.b6993",
        "name": "NOW",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "repeat": "",
        "crontab": "",
        "once": false,
        "x": 100.89582824707031,
        "y": 39.888885498046875,
        "wires": [
            [
                "4632ca8b.a96dc4"
            ]
        ]
    },
    {
        "id": "91a90c98.b73e7",
        "type": "inject",
        "z": "5ed2a187.b6993",
        "name": "8:05am",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "repeat": "",
        "crontab": "05 8 * * *",
        "once": false,
        "x": 129.8958282470703,
        "y": 534.888916015625,
        "wires": [
            [
                "7aaf7c94.e581a4"
            ]
        ]
    },
    {
        "id": "2d2b2200.eac1fe",
        "type": "inject",
        "z": "5ed2a187.b6993",
        "name": "11:05am",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "repeat": "",
        "crontab": "05 11 * * *",
        "once": false,
        "x": 130.89584350585938,
        "y": 573.888916015625,
        "wires": [
            [
                "7aaf7c94.e581a4"
            ]
        ]
    },
    {
        "id": "4fd53d60.cc06f4",
        "type": "inject",
        "z": "5ed2a187.b6993",
        "name": "4:05pm",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "repeat": "",
        "crontab": "05 16 * * *",
        "once": false,
        "x": 130.89584350585938,
        "y": 611.888916015625,
        "wires": [
            [
                "7aaf7c94.e581a4"
            ]
        ]
    },
    {
        "id": "9d2cdf19.29d77",
        "type": "inject",
        "z": "5ed2a187.b6993",
        "name": "6:05pm",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "repeat": "",
        "crontab": "05 18 * * *",
        "once": false,
        "x": 128.89584350585938,
        "y": 648.8889465332031,
        "wires": [
            [
                "7aaf7c94.e581a4"
            ]
        ]
    },
    {
        "id": "c992f80.e5bc708",
        "type": "inject",
        "z": "5ed2a187.b6993",
        "name": "10:05pm",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "repeat": "",
        "crontab": "05 22 * * *",
        "once": false,
        "x": 128.89584350585938,
        "y": 683.888916015625,
        "wires": [
            [
                "7aaf7c94.e581a4"
            ]
        ]
    },
    {
        "id": "ea85981.4000e68",
        "type": "ui_gauge",
        "z": "e4f639c8.94dc68",
        "name": "GaugeBasementStairsLight",
        "group": "e7c2eba5.3a8458",
        "order": 2,
        "width": "5",
        "height": "3",
        "gtype": "gage",
        "title": "",
        "label": "",
        "format": "{{value}}",
        "min": "0",
        "max": "20",
        "colors": [
            "#000000",
            "#c0c0c0",
            "#ffffff"
        ],
        "x": 961.4514465332031,
        "y": 484.8888854980469,
        "wires": []
    },
    {
        "id": "a6dff883.5c1508",
        "type": "ui_gauge",
        "z": "e4f639c8.94dc68",
        "name": "GaugeBasementRoomLight",
        "group": "753e8570.d94fac",
        "order": 2,
        "width": "5",
        "height": "3",
        "gtype": "gage",
        "title": "",
        "label": "",
        "format": "{{value}}",
        "min": "0",
        "max": "20",
        "colors": [
            "#000000",
            "#c0c0c0",
            "#ffffff"
        ],
        "x": 967.4514465332031,
        "y": 626.8888854980469,
        "wires": []
    },
    {
        "id": "9c2a3c07.56c3a",
        "type": "ui_gauge",
        "z": "e4f639c8.94dc68",
        "name": "GaugeFrontHallwayLight",
        "group": "a99bdfc.359cc2",
        "order": 2,
        "width": "5",
        "height": "3",
        "gtype": "gage",
        "title": "",
        "label": "",
        "format": "{{value}}",
        "min": "0",
        "max": "20",
        "colors": [
            "#000000",
            "#c0c0c0",
            "#ffffff"
        ],
        "x": 1062.4514465332031,
        "y": 770.8889465332031,
        "wires": []
    },
    {
        "id": "d323e087.5bfa9",
        "type": "ui_gauge",
        "z": "e4f639c8.94dc68",
        "name": "GaugeTopHallwayLight",
        "group": "4d3cc33.01f053c",
        "order": 2,
        "width": "5",
        "height": "3",
        "gtype": "gage",
        "title": "",
        "label": "",
        "format": "{{value}}",
        "min": "0",
        "max": "20",
        "colors": [
            "#000000",
            "#c0c0c0",
            "#ffffff"
        ],
        "x": 898.451416015625,
        "y": 860.888916015625,
        "wires": []
    },
    {
        "id": "7adb1f06.70b3c",
        "type": "ui_gauge",
        "z": "e4f639c8.94dc68",
        "name": "GaugeGarageLight",
        "group": "b0699912.a56398",
        "order": 2,
        "width": "5",
        "height": "3",
        "gtype": "gage",
        "title": "",
        "label": "",
        "format": "{{value}}",
        "min": "0",
        "max": "20",
        "colors": [
            "#000000",
            "#c0c0c0",
            "#ffffff"
        ],
        "x": 1029.451416015625,
        "y": 953.888916015625,
        "wires": []
    },
    {
        "id": "99d5abf5.cbc428",
        "type": "ui_gauge",
        "z": "e4f639c8.94dc68",
        "name": "GaugeFamilyRoomLight",
        "group": "b3fd31f5.13e4b",
        "order": 2,
        "width": "5",
        "height": "3",
        "gtype": "gage",
        "title": "",
        "label": "",
        "format": "{{value}}",
        "min": "0",
        "max": "20",
        "colors": [
            "#000000",
            "#c0c0c0",
            "#ffffff"
        ],
        "x": 1108.451416015625,
        "y": 1105.888916015625,
        "wires": []
    },
    {
        "id": "1d9ff514.49f08b",
        "type": "ui_chart",
        "z": "e4f639c8.94dc68",
        "name": "ChartExternalTemp",
        "group": "4746011.7581c",
        "order": 1,
        "width": "",
        "height": "",
        "label": "External Temperature",
        "chartType": "line",
        "xformat": "HH",
        "interpolate": "step-after",
        "nodata": "No Data",
        "ymin": "20",
        "ymax": "100",
        "removeOlder": 1,
        "removeOlderPoints": "",
        "removeOlderUnit": "86400",
        "cutout": "",
        "x": 830.4514172989645,
        "y": 18.111056151213006,
        "wires": [
            [],
            []
        ]
    },
    {
        "id": "36eedd05.7e15a2",
        "type": "function",
        "z": "4c9633fe.a93e5c",
        "name": "SetFrontDoorState",
        "func": "var jsonObj = msg.payload;\nvar stateVar = \"FRONTDOOR\";\n\nif( jsonObj.Measurement === \"door\") {\n    var doorState = jsonObj.Value;\n    if( doorState === 0 ) {\n        global.set(stateVar, \"CLOSED\");\n    }\n    if( doorState === 1 ) {\n        global.set(stateVar, \"OPEN\");\n    }\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 665.8958129882812,
        "y": 313,
        "wires": [
            [
                "d1c1bacb.be0078"
            ]
        ]
    },
    {
        "id": "22192be2.dac964",
        "type": "function",
        "z": "4c9633fe.a93e5c",
        "name": "SetGarageDoorState",
        "func": "var jsonObj = msg.payload;\nvar stateVar = \"GARAGEDOOR\";\n\nif( jsonObj.Measurement === \"door\") {\n    var doorState = jsonObj.Value;\n    if( doorState === 0 ) {\n        global.set(stateVar, \"CLOSED\");\n    }\n    if( doorState === 1 ) {\n        global.set(stateVar, \"OPEN\");\n    }\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 666.8958129882812,
        "y": 795,
        "wires": [
            [
                "d1c1bacb.be0078"
            ]
        ]
    },
    {
        "id": "d0fc66b3.504848",
        "type": "function",
        "z": "4c9633fe.a93e5c",
        "name": "SetDeckDoorState",
        "func": "var jsonObj = msg.payload;\nvar stateVar = \"DECKDOOR\";\n\nif( jsonObj.Measurement === \"door\") {\n    var doorState = jsonObj.Value;\n    if( doorState === 0 ) {\n        global.set(stateVar, \"CLOSED\");\n    }\n    if( doorState === 1 ) {\n        global.set(stateVar, \"OPEN\");\n    }\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 656.8958129882812,
        "y": 847,
        "wires": [
            [
                "d1c1bacb.be0078"
            ]
        ]
    },
    {
        "id": "d1c1bacb.be0078",
        "type": "debug",
        "z": "4c9633fe.a93e5c",
        "name": "",
        "active": false,
        "console": "false",
        "complete": "false",
        "x": 972.8402862548828,
        "y": 446.0173945721286,
        "wires": []
    },
    {
        "id": "6131e39b.8ae4dc",
        "type": "inject",
        "z": "5ed2a187.b6993",
        "name": "NOW",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "repeat": "",
        "crontab": "",
        "once": false,
        "x": 111.89582824707031,
        "y": 294.8888854980469,
        "wires": [
            [
                "cf63ce80.d51b5"
            ]
        ]
    },
    {
        "id": "1bfa1d52.db67c3",
        "type": "inject",
        "z": "5ed2a187.b6993",
        "name": "NOW",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "repeat": "",
        "crontab": "",
        "once": false,
        "x": 94.89582824707031,
        "y": 174.88888549804688,
        "wires": [
            [
                "234dcab7.3059b6"
            ]
        ]
    },
    {
        "id": "93bc5b8f.351648",
        "type": "ui_template",
        "z": "e4f639c8.94dc68",
        "group": "9e73c98f.b41688",
        "name": "Front Door",
        "order": 0,
        "width": 0,
        "height": 0,
        "format": "<div layout=\"row\" layout-align=\"space-between\">\n    <p>Front Door is </p>\n    <p ng-style=\"{color: msg.payload === 0 ? 'green' : 'red'}\">\n        {{msg.payload === 0 ? 'CLOSED' : 'OPEN'}}\n    </p>\n</div>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "x": 891.6145477294922,
        "y": 1221.857666015625,
        "wires": [
            []
        ]
    },
    {
        "id": "d71de6d7.f03bd8",
        "type": "switch",
        "z": "e4f639c8.94dc68",
        "name": "ForEachSensor",
        "property": "payload.SensorId",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "1",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "2",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "3",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "4",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "5",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "outputs": 5,
        "x": 251.89578247070312,
        "y": 1109.5555725097656,
        "wires": [
            [],
            [
                "40f3a27d.98103c"
            ],
            [],
            [],
            [
                "825095fe.a9b158",
                "26d6a3c4.77ff2c"
            ]
        ]
    },
    {
        "id": "40f3a27d.98103c",
        "type": "function",
        "z": "e4f639c8.94dc68",
        "name": "FrontDoorSensor",
        "func": "var jsonObj = msg.payload;\nif (jsonObj.Measurement === \"door\") {\n    var temp = jsonObj.Value;\n    msg.payload = temp;\n    return msg;\n}",
        "outputs": 1,
        "noerr": 0,
        "x": 489.89581298828125,
        "y": 1216.888916015625,
        "wires": [
            [
                "19efbce.ca9d943"
            ]
        ]
    },
    {
        "id": "825095fe.a9b158",
        "type": "function",
        "z": "e4f639c8.94dc68",
        "name": "DeckDoorSensor",
        "func": "var jsonObj = msg.payload;\nif (jsonObj.Measurement === \"door1\") {\n    var temp = jsonObj.Value;\n    msg.payload = temp;\n    return msg;\n}",
        "outputs": 1,
        "noerr": 0,
        "x": 497.8957977294922,
        "y": 1272.888916015625,
        "wires": [
            [
                "efd44f1f.a6187"
            ]
        ]
    },
    {
        "id": "2414750a.15fc2a",
        "type": "ui_template",
        "z": "e4f639c8.94dc68",
        "group": "9e73c98f.b41688",
        "name": "Garage Door",
        "order": 0,
        "width": 0,
        "height": 0,
        "format": "<div \n    layout=\"row\" layout-align=\"space-between\">\n    <p>Garage door is </p>\n    <p ng-style=\"{color: msg.payload === 0 ? 'green' : 'red'}\">\n        {{msg.payload === 0 ? 'CLOSED' : 'OPEN'}}\n    </p>\n</div>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "x": 909.8957977294922,
        "y": 1275.2220458984375,
        "wires": [
            []
        ]
    },
    {
        "id": "26d6a3c4.77ff2c",
        "type": "function",
        "z": "e4f639c8.94dc68",
        "name": "GarageDoorSensor",
        "func": "var jsonObj = msg.payload;\nif (jsonObj.Measurement === \"door2\") {\n    var temp = jsonObj.Value;\n    msg.payload = temp;\n    return msg;\n}",
        "outputs": 1,
        "noerr": 0,
        "x": 502.89581298828125,
        "y": 1323.2222900390625,
        "wires": [
            [
                "811a1781.fe5f78"
            ]
        ]
    },
    {
        "id": "3648bb5f.7aca94",
        "type": "ui_template",
        "z": "e4f639c8.94dc68",
        "group": "9e73c98f.b41688",
        "name": "Deck Door",
        "order": 0,
        "width": 0,
        "height": 0,
        "format": "<div  \n    layout=\"row\" layout-align=\"space-between\">\n    <p>Deck door is </p>\n    <p ng-style=\"{color: msg.payload === 0 ? 'green' : 'red'}\">\n        {{msg.payload === 0 ? 'CLOSED' : 'OPEN'}}\n    </p>\n</div>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "x": 905.8957977294922,
        "y": 1322.2221069335938,
        "wires": [
            []
        ]
    },
    {
        "id": "811a1781.fe5f78",
        "type": "function",
        "z": "e4f639c8.94dc68",
        "name": "CharToNum",
        "func": "msg.payload = parseInt(msg.payload);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 708.8402557373047,
        "y": 1325.4409790039062,
        "wires": [
            [
                "3648bb5f.7aca94"
            ]
        ]
    },
    {
        "id": "19efbce.ca9d943",
        "type": "function",
        "z": "e4f639c8.94dc68",
        "name": "CharToNum",
        "func": "msg.payload = parseInt(msg.payload);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 703.8957977294922,
        "y": 1215.22216796875,
        "wires": [
            [
                "93bc5b8f.351648"
            ]
        ]
    },
    {
        "id": "efd44f1f.a6187",
        "type": "function",
        "z": "e4f639c8.94dc68",
        "name": "CharToNum",
        "func": "msg.payload = parseInt(msg.payload);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 704.8958129882812,
        "y": 1272.22216796875,
        "wires": [
            [
                "2414750a.15fc2a"
            ]
        ]
    },
    {
        "id": "94101358.ef921",
        "type": "mqtt in",
        "z": "554dac59.82b8d4",
        "name": "",
        "topic": "testvs",
        "qos": "0",
        "broker": "5c0e3c9f.cbbc54",
        "x": 128.5,
        "y": 442.1499938964844,
        "wires": [
            [
                "5a282ac4.7d5274"
            ]
        ]
    },
    {
        "id": "5a282ac4.7d5274",
        "type": "debug",
        "z": "554dac59.82b8d4",
        "name": "",
        "active": true,
        "console": "false",
        "complete": "false",
        "x": 328.5,
        "y": 440.29998779296875,
        "wires": []
    },
    {
        "id": "2c6cb696.2c5d7a",
        "type": "mqtt out",
        "z": "554dac59.82b8d4",
        "name": "",
        "topic": "testvs",
        "qos": "0",
        "retain": "",
        "broker": "5c0e3c9f.cbbc54",
        "x": 303.5,
        "y": 379.29998779296875,
        "wires": []
    },
    {
        "id": "7b8eb310.7c48cc",
        "type": "inject",
        "z": "554dac59.82b8d4",
        "name": "",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "repeat": "",
        "crontab": "",
        "once": false,
        "x": 121.5,
        "y": 367.1499938964844,
        "wires": [
            [
                "2c6cb696.2c5d7a"
            ]
        ]
    },
    {
        "id": "9b54b12f.a193f",
        "type": "function",
        "z": "e4f639c8.94dc68",
        "name": "CreateRowForCSV",
        "func": "var temp = msg.payload;\nvar now = new Date().valueOf();\nmsg.payload = {\"SensorId\":\"0\", \"Measurement\": \"externaltemperature\", \"Value\": temp, \"timestamp\": now};\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 810,
        "y": 120,
        "wires": [
            [
                "87f65b13.b254a8"
            ]
        ]
    },
    {
        "id": "b49050a5.247e1",
        "type": "inject",
        "z": "267b956f.b927ea",
        "name": "",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "repeat": "3600",
        "crontab": "",
        "once": false,
        "x": 105.38543701171875,
        "y": 61.527859864411994,
        "wires": [
            [
                "1293a7ac.2e22d8"
            ]
        ]
    },
    {
        "id": "1293a7ac.2e22d8",
        "type": "http request",
        "z": "267b956f.b927ea",
        "name": "CallWeatherAPI",
        "method": "GET",
        "ret": "obj",
        "url": "http://api.openweathermap.org/data/2.5/weather?id=6331909&APPID=702c2966b1ca909d0e4b6e2bfff14cd8",
        "tls": "",
        "x": 326.3923645019531,
        "y": 62.708401856599494,
        "wires": [
            [
                "afc809e0.4f4058"
            ]
        ]
    },
    {
        "id": "afc809e0.4f4058",
        "type": "function",
        "z": "267b956f.b927ea",
        "name": "GetCurrentTemp",
        "func": "var temp = msg.payload.main.temp;\ntemp = Math.round(((temp-273)*9/5)+32);\nmsg.payload = temp;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 548.3889465332031,
        "y": 68.6632358409745,
        "wires": [
            []
        ]
    },
    {
        "id": "cc106da5.2bc8",
        "type": "function",
        "z": "267b956f.b927ea",
        "name": "RoundOff",
        "func": "var attribute = msg.payload.Measurement;\nvar value = msg.payload.Value;\nif( attribute === \"light\" || \n    attribute === \"light2\") { // discretize to 20 values\n    msg.payload.Value = Math.floor(value/50);\n}\n\nif( attribute === \"temperature\" || \n    attribute === \"temperature1\" ||\n    attribute === \"temperature2\") { // round off\n    msg.payload.Value = Math.round(value);\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 389,
        "y": 398.888943848787,
        "wires": [
            [
                "1b14e93.75f8717",
                "fd8b8559.be9478",
                "963f58a0.70f798"
            ]
        ]
    },
    {
        "id": "2099dbbe.269bb4",
        "type": "json",
        "z": "267b956f.b927ea",
        "name": "ConvertToJSON",
        "x": 212,
        "y": 401.888943848787,
        "wires": [
            [
                "cc106da5.2bc8"
            ]
        ]
    },
    {
        "id": "1b14e93.75f8717",
        "type": "switch",
        "z": "267b956f.b927ea",
        "name": "ForEachSensor",
        "property": "payload.SensorId",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "1",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "2",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "3",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "4",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "5",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "outputs": 5,
        "x": 263,
        "y": 673.888943848787,
        "wires": [
            [
                "5e32e3a4.067e0c",
                "a0a631b1.e2852",
                "5ca80f59.bdfd2"
            ],
            [
                "c3ec2c97.76d0b",
                "cdbec0be.6e474"
            ],
            [
                "41c44bac.65aec4",
                "163ee56c.462e5b"
            ],
            [
                "b94f7307.98c39",
                "5fdc2862.6b7968"
            ],
            [
                "2123998e.835a36",
                "ce88dd23.02009",
                "e6ba579a.da48a8"
            ]
        ]
    },
    {
        "id": "fd8b8559.be9478",
        "type": "switch",
        "z": "267b956f.b927ea",
        "name": "ForEachSensor",
        "property": "payload.SensorId",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "1",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "2",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "3",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "4",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "5",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "outputs": 5,
        "x": 241.89578247070312,
        "y": 1111.4445163585526,
        "wires": [
            [],
            [
                "6f2f188e.836208"
            ],
            [],
            [],
            [
                "972688bc.fe4ea8",
                "6b9b83d1.1fcb3c"
            ]
        ]
    },
    {
        "id": "aa54f19a.3e88d",
        "type": "function",
        "z": "267b956f.b927ea",
        "name": "ChkCleanJSONString",
        "func": "// check for fully formed JSON string\nvar temp = msg.payload;\nvar strLen = msg.payload.length;\nif( (temp.indexOf(\"{\") === 0) && (temp.indexOf(\"}\") === (strLen-1)))\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 527,
        "y": 272.888943848787,
        "wires": [
            [
                "2099dbbe.269bb4",
                "d7d7c37.566ba4"
            ]
        ]
    },
    {
        "id": "5e32e3a4.067e0c",
        "type": "function",
        "z": "267b956f.b927ea",
        "name": "LightSensor1",
        "func": "var jsonObj = msg.payload;\nif (jsonObj.Measurement === \"light\") {\n    var temp = jsonObj.Value;\n    msg.payload = temp;\n    return msg;\n}\n",
        "outputs": "1",
        "noerr": 0,
        "x": 596,
        "y": 502.888943848787,
        "wires": [
            []
        ]
    },
    {
        "id": "a0a631b1.e2852",
        "type": "function",
        "z": "267b956f.b927ea",
        "name": "TempSensor1",
        "func": "var jsonObj = msg.payload;\nif (jsonObj.Measurement === \"temperature\") {\n    var temp = jsonObj.Value;\n    msg.payload = temp;\n    return msg;\n}",
        "outputs": 1,
        "noerr": 0,
        "x": 608,
        "y": 464.888943848787,
        "wires": [
            []
        ]
    },
    {
        "id": "5ca80f59.bdfd2",
        "type": "function",
        "z": "267b956f.b927ea",
        "name": "LightSensor1",
        "func": "var jsonObj = msg.payload;\n\nif (jsonObj.Measurement === \"light2\") {\n    var temp = jsonObj.Value;\n    msg.payload = temp;\n    return msg;\n}",
        "outputs": "1",
        "noerr": 0,
        "x": 597.451416015625,
        "y": 549.77783203125,
        "wires": [
            []
        ]
    },
    {
        "id": "c3ec2c97.76d0b",
        "type": "function",
        "z": "267b956f.b927ea",
        "name": "LightSensor2",
        "func": "var jsonObj = msg.payload;\nif (jsonObj.Measurement === \"light\") {\n    var temp = jsonObj.Value;\n    msg.payload = temp;\n    return msg;\n}",
        "outputs": 1,
        "noerr": 0,
        "x": 605,
        "y": 662.888943848787,
        "wires": [
            []
        ]
    },
    {
        "id": "cdbec0be.6e474",
        "type": "function",
        "z": "267b956f.b927ea",
        "name": "TempSensor2",
        "func": "var jsonObj = msg.payload;\nif (jsonObj.Measurement === \"temperature\") {\n    var temp = jsonObj.Value;\n    msg.payload = temp;\n    return msg;\n}",
        "outputs": 1,
        "noerr": 0,
        "x": 615,
        "y": 622.888943848787,
        "wires": [
            []
        ]
    },
    {
        "id": "41c44bac.65aec4",
        "type": "function",
        "z": "267b956f.b927ea",
        "name": "LightSensor3",
        "func": "var jsonObj = msg.payload;\nif (jsonObj.Measurement === \"light\") {\n    var temp = jsonObj.Value;\n    msg.payload = temp;\n    return msg;\n}",
        "outputs": 1,
        "noerr": 0,
        "x": 612,
        "y": 816.888943848787,
        "wires": [
            []
        ]
    },
    {
        "id": "163ee56c.462e5b",
        "type": "function",
        "z": "267b956f.b927ea",
        "name": "TempSensor3",
        "func": "var jsonObj = msg.payload;\nif (jsonObj.Measurement === \"temperature\") {\n    var temp = jsonObj.Value;\n    msg.payload = temp;\n    return msg;\n}",
        "outputs": 1,
        "noerr": 0,
        "x": 618,
        "y": 774.888943848787,
        "wires": [
            []
        ]
    },
    {
        "id": "b94f7307.98c39",
        "type": "function",
        "z": "267b956f.b927ea",
        "name": "LightSensor4",
        "func": "var jsonObj = msg.payload;\nif (jsonObj.Measurement === \"light\") {\n    var temp = jsonObj.Value;\n    msg.payload = temp;\n    return msg;\n}",
        "outputs": 1,
        "noerr": 0,
        "x": 636,
        "y": 936.888943848787,
        "wires": [
            []
        ]
    },
    {
        "id": "5fdc2862.6b7968",
        "type": "function",
        "z": "267b956f.b927ea",
        "name": "TempSensor4",
        "func": "var jsonObj = msg.payload;\nif (jsonObj.Measurement === \"temperature\") {\n    var temp = jsonObj.Value;\n    msg.payload = temp;\n    return msg;\n}",
        "outputs": 1,
        "noerr": 0,
        "x": 647,
        "y": 894.888943848787,
        "wires": [
            []
        ]
    },
    {
        "id": "2123998e.835a36",
        "type": "function",
        "z": "267b956f.b927ea",
        "name": "TempSensor5",
        "func": "var jsonObj = msg.payload;\nif (jsonObj.Measurement === \"temperature2\") {\n    var temp = jsonObj.Value;\n    msg.payload = temp;\n    return msg;\n}",
        "outputs": 1,
        "noerr": 0,
        "x": 639.7847290039062,
        "y": 1018.888943848787,
        "wires": [
            []
        ]
    },
    {
        "id": "ce88dd23.02009",
        "type": "function",
        "z": "267b956f.b927ea",
        "name": "LightSensor5",
        "func": "var jsonObj = msg.payload;\nif (jsonObj.Measurement === \"light2\") {\n    var temp = jsonObj.Value;\n    msg.payload = temp;\n    return msg;\n}",
        "outputs": 1,
        "noerr": 0,
        "x": 626.7846984863281,
        "y": 1067.8889743663651,
        "wires": [
            []
        ]
    },
    {
        "id": "e6ba579a.da48a8",
        "type": "function",
        "z": "267b956f.b927ea",
        "name": "TempSensor5Tank",
        "func": "var jsonObj = msg.payload;\nif (jsonObj.Measurement === \"temperature1\") {\n    var temp = jsonObj.Value;\n    msg.payload = temp;\n    return msg;\n}",
        "outputs": 1,
        "noerr": 0,
        "x": 648.673583984375,
        "y": 1115.4444580078125,
        "wires": [
            []
        ]
    },
    {
        "id": "6f2f188e.836208",
        "type": "function",
        "z": "267b956f.b927ea",
        "name": "FrontDoorSensor",
        "func": "var jsonObj = msg.payload;\nif (jsonObj.Measurement === \"door\") {\n    var temp = jsonObj.Value;\n    msg.payload = temp;\n    return msg;\n}",
        "outputs": 1,
        "noerr": 0,
        "x": 479.89581298828125,
        "y": 1218.777859864412,
        "wires": [
            [
                "13d675c6.50f9ca"
            ]
        ]
    },
    {
        "id": "972688bc.fe4ea8",
        "type": "function",
        "z": "267b956f.b927ea",
        "name": "DeckDoorSensor",
        "func": "var jsonObj = msg.payload;\nif (jsonObj.Measurement === \"door1\") {\n    var temp = jsonObj.Value;\n    msg.payload = temp;\n    return msg;\n}",
        "outputs": 1,
        "noerr": 0,
        "x": 487.8957977294922,
        "y": 1274.777859864412,
        "wires": [
            [
                "592552fb.40872c"
            ]
        ]
    },
    {
        "id": "6b9b83d1.1fcb3c",
        "type": "function",
        "z": "267b956f.b927ea",
        "name": "GarageDoorSensor",
        "func": "var jsonObj = msg.payload;\nif (jsonObj.Measurement === \"door2\") {\n    var temp = jsonObj.Value;\n    msg.payload = temp;\n    return msg;\n}",
        "outputs": 1,
        "noerr": 0,
        "x": 492.89581298828125,
        "y": 1325.1112338878495,
        "wires": [
            [
                "24a85249.06fb1e"
            ]
        ]
    },
    {
        "id": "76c86870.e9d9c8",
        "type": "function",
        "z": "267b956f.b927ea",
        "name": "ChkZeroLenMsg",
        "func": "if (msg.payload.length > 0 )\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 302,
        "y": 265.888943848787,
        "wires": [
            [
                "aa54f19a.3e88d"
            ]
        ]
    },
    {
        "id": "13d675c6.50f9ca",
        "type": "function",
        "z": "267b956f.b927ea",
        "name": "CharToNum",
        "func": "msg.payload = parseInt(msg.payload);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 693.8957977294922,
        "y": 1217.111111817537,
        "wires": [
            []
        ]
    },
    {
        "id": "592552fb.40872c",
        "type": "function",
        "z": "267b956f.b927ea",
        "name": "CharToNum",
        "func": "msg.payload = parseInt(msg.payload);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 694.8958129882812,
        "y": 1274.111111817537,
        "wires": [
            []
        ]
    },
    {
        "id": "24a85249.06fb1e",
        "type": "function",
        "z": "267b956f.b927ea",
        "name": "CharToNum",
        "func": "msg.payload = parseInt(msg.payload);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 698.8402557373047,
        "y": 1327.3299228526932,
        "wires": [
            []
        ]
    },
    {
        "id": "48381148.c5da4",
        "type": "mqtt in",
        "z": "267b956f.b927ea",
        "name": "SensorData",
        "topic": "SensorData",
        "broker": "cc1d437c.d2949",
        "x": 105,
        "y": 285.888943848787,
        "wires": [
            [
                "76c86870.e9d9c8"
            ]
        ]
    },
    {
        "id": "963f58a0.70f798",
        "type": "websocket out",
        "z": "267b956f.b927ea",
        "name": "",
        "server": "419e7ee2.cc7ab",
        "client": "",
        "x": 680.5,
        "y": 397.3000030517578,
        "wires": []
    },
    {
        "id": "d7d7c37.566ba4",
        "type": "debug",
        "z": "267b956f.b927ea",
        "name": "",
        "active": true,
        "console": "false",
        "complete": "false",
        "x": 856.5,
        "y": 259.29998779296875,
        "wires": []
    }
]
